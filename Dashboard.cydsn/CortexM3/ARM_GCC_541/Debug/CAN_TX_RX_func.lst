ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.thumb
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB63:
  27              		.file 1 "Generated_Source\\PSoC5\\CAN_TX_RX_func.c"
   1:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "CAN.h"
  25:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "can_manga.h"
  27:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  28:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  29:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  30:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#END` */
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 2


  31:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  32:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  33:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
  34:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  35:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  36:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  37:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
  38:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  39:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  40:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  41:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  42:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
  43:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  44:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *           messages.
  45:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  46:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
  47:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Indication if message has been sent.
  48:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   Define                             Description
  49:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  50:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  51:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  52:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  53:Generated_Source\PSoC5/CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  54:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 i, j, shift;
  56:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 retry = 0u;
  57:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  41              		.loc 1 57 0
  42 0002 0121     		movs	r1, #1
  56:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  43              		.loc 1 56 0
  44 0004 0026     		movs	r6, #0
  58:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint32 regTemp;
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  60:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  45              		.loc 1 60 0
  46 0006 5DE0     		b	.L2
  47              	.LVL2:
  48              	.L16:
  61:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  64:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 3


  66:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  49              		.loc 1 66 0
  50 0008 17F0030F 		tst	r7, #3
  51 000c 4DD1     		bne	.L3
  67:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
  68:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* Find free mailbox */
  69:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  70:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  52              		.loc 1 70 0
  53 000e 2F4B     		ldr	r3, .L22
  54 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  55 0012 3B42     		tst	r3, r7
  56 0014 49D1     		bne	.L3
  57              	.LVL3:
  71:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  72:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  73:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  74:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  75:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     {
  76:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         regTemp = 0u;
  77:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  78:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Set message parameters */
  79:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  58              		.loc 1 79 0
  59 0016 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  60 0018 0BB1     		cbz	r3, .L4
  80:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  81:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  61              		.loc 1 81 0
  62 001a 4FF40013 		mov	r3, #2097152
  63              	.L4:
  64              	.LVL4:
  82:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  83:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  84:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  65              		.loc 1 84 0
  66 001e 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  67              	.LVL5:
  68 0020 31B9     		cbnz	r1, .L5
  85:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  86:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  69              		.loc 1 86 0
  70 0022 2B49     		ldr	r1, .L22+4
  71 0024 01EB0211 		add	r1, r1, r2, lsl #4
  72 0028 0468     		ldr	r4, [r0]
  73 002a 6405     		lsls	r4, r4, #21
  74 002c 4C60     		str	r4, [r1, #4]
  75 002e 07E0     		b	.L6
  76              	.L5:
  87:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  88:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  89:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  90:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  77              		.loc 1 90 0
  78 0030 43F48013 		orr	r3, r3, #1048576
  79              	.LVL6:
  91:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 4


  80              		.loc 1 91 0
  81 0034 2649     		ldr	r1, .L22+4
  82 0036 01EB0211 		add	r1, r1, r2, lsl #4
  83 003a 0468     		ldr	r4, [r0]
  84 003c E400     		lsls	r4, r4, #3
  85 003e 4C60     		str	r4, [r1, #4]
  86              	.L6:
  92:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  93:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  94:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
  87              		.loc 1 94 0
  88 0040 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  89 0044 BEF1070F 		cmp	lr, #7
  90 0048 02D8     		bhi	.L7
  95:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  96:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
  91              		.loc 1 96 0
  92 004a 43EA0E4E 		orr	lr, r3, lr, lsl #16
  93              	.LVL7:
  94 004e 01E0     		b	.L8
  95              	.LVL8:
  96              	.L7:
  97:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  98:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  99:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 100:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
  97              		.loc 1 100 0
  98 0050 43F4002E 		orr	lr, r3, #524288
  99              	.LVL9:
 100              	.L8:
 101:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 102:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 103:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 101              		.loc 1 103 0
 102 0054 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 103 0056 0BB1     		cbz	r3, .L9
 104:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 105:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 104              		.loc 1 105 0
 105 0058 4EF0040E 		orr	lr, lr, #4
 106              	.LVL10:
 107              	.L9:
 106:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 108              		.loc 1 108 0
 109 005c 0023     		movs	r3, #0
 110 005e 0FE0     		b	.L10
 111              	.LVL11:
 112              	.L14:
 109:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 111:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 113              		.loc 1 111 0
 114 0060 1B49     		ldr	r1, .L22+4
 115 0062 01EB0214 		add	r4, r1, r2, lsl #4
 116 0066 032B     		cmp	r3, #3
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 5


 117 0068 02D9     		bls	.L11
 118              		.loc 1 111 0 is_stmt 0 discriminator 1
 119 006a C3F10B01 		rsb	r1, r3, #11
 120 006e 01E0     		b	.L12
 121              	.L11:
 122              		.loc 1 111 0 discriminator 2
 123 0070 C3F10301 		rsb	r1, r3, #3
 124              	.L12:
 125              		.loc 1 111 0 discriminator 4
 126 0074 8568     		ldr	r5, [r0, #8]
 127 0076 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 128 0078 2144     		add	r1, r1, r4
 129 007a 0D72     		strb	r5, [r1, #8]
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 130              		.loc 1 108 0 is_stmt 1 discriminator 4
 131 007c 0133     		adds	r3, r3, #1
 132              	.LVL12:
 133 007e DBB2     		uxtb	r3, r3
 134              	.LVL13:
 135              	.L10:
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 136              		.loc 1 108 0 is_stmt 0 discriminator 2
 137 0080 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 138 0082 8B42     		cmp	r3, r1
 139 0084 01D2     		bcs	.L13
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 140              		.loc 1 108 0 discriminator 3
 141 0086 072B     		cmp	r3, #7
 142 0088 EAD9     		bls	.L14
 143              	.L13:
 112:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 113:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 114:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 115:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 116:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 117:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Disable isr */
 118:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 144              		.loc 1 118 0 is_stmt 1
 145 008a 4FF48034 		mov	r4, #65536
 146 008e 114B     		ldr	r3, .L22+8
 147              	.LVL14:
 148 0090 1C60     		str	r4, [r3]
 119:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 120:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 121:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 149              		.loc 1 121 0
 150 0092 1101     		lsls	r1, r2, #4
 151 0094 0E4D     		ldr	r5, .L22+4
 152 0096 4EF40003 		orr	r3, lr, #8388608
 153 009a 43F00803 		orr	r3, r3, #8
 154 009e 4B51     		str	r3, [r1, r5]
 122:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 123:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 124:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 155              		.loc 1 124 0
 156 00a0 0123     		movs	r3, #1
 157 00a2 4B51     		str	r3, [r1, r5]
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 6


 125:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 126:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 127:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 128:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 129:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 130:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 131:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 132:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             else
 133:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 134:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 135:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 136:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 137:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 138:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Enable isr */
 139:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 158              		.loc 1 139 0
 159 00a4 0C4B     		ldr	r3, .L22+12
 160 00a6 1C60     		str	r4, [r3]
 161              	.LVL15:
 140:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 141:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 162              		.loc 1 141 0
 163 00a8 0021     		movs	r1, #0
 164              	.LVL16:
 165              	.L3:
 142:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     }
 143:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 144:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             shift <<= 1u;
 166              		.loc 1 144 0
 167 00aa 7B00     		lsls	r3, r7, #1
 168 00ac DFB2     		uxtb	r7, r3
 169              	.LVL17:
 145:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 170              		.loc 1 145 0
 171 00ae 31B1     		cbz	r1, .L15
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 172              		.loc 1 63 0 discriminator 2
 173 00b0 0132     		adds	r2, r2, #1
 174              	.LVL18:
 175 00b2 D2B2     		uxtb	r2, r2
 176              	.LVL19:
 177 00b4 01E0     		b	.L18
 178              	.LVL20:
 179              	.L20:
 180 00b6 0127     		movs	r7, #1
 181 00b8 0022     		movs	r2, #0
 182              	.L18:
 183              	.LVL21:
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 184              		.loc 1 63 0 is_stmt 0 discriminator 1
 185 00ba 072A     		cmp	r2, #7
 186 00bc A4D9     		bls	.L16
 187              	.L15:
 146:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 147:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 break;
 148:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 149:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 7


 150:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 188              		.loc 1 150 0 is_stmt 1
 189 00be 19B1     		cbz	r1, .L17
 151:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 152:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             break;
 153:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 154:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         else
 155:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 156:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             retry++;
 190              		.loc 1 156 0
 191 00c0 0136     		adds	r6, r6, #1
 192              	.LVL22:
 193 00c2 F6B2     		uxtb	r6, r6
 194              	.LVL23:
 195              	.L2:
  60:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 196              		.loc 1 60 0
 197 00c4 022E     		cmp	r6, #2
 198 00c6 F6D9     		bls	.L20
 199              	.L17:
 157:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 158:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 159:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 160:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     return (result);
 161:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 200              		.loc 1 161 0
 201 00c8 0846     		mov	r0, r1
 202              	.LVL24:
 203 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 204              	.LVL25:
 205              	.L23:
 206              		.align	2
 207              	.L22:
 208 00cc 08A00040 		.word	1073782792
 209 00d0 20A00040 		.word	1073782816
 210 00d4 80E100E0 		.word	-536813184
 211 00d8 00E100E0 		.word	-536813312
 212              		.cfi_endproc
 213              	.LFE63:
 214              		.size	CAN_SendMsg, .-CAN_SendMsg
 215              		.section	.text.CAN_TxCancel,"ax",%progbits
 216              		.align	2
 217              		.global	CAN_TxCancel
 218              		.thumb
 219              		.thumb_func
 220              		.type	CAN_TxCancel, %function
 221              	CAN_TxCancel:
 222              	.LFB64:
 162:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 163:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 164:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 165:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 166:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 167:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 168:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 169:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 170:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 8


 171:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 172:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 173:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 174:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 175:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 176:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 177:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 178:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 179:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 180:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 223              		.loc 1 180 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL26:
 181:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 229              		.loc 1 181 0
 230 0000 0728     		cmp	r0, #7
 231 0002 07D8     		bhi	.L24
 182:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 183:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 232              		.loc 1 183 0
 233 0004 0001     		lsls	r0, r0, #4
 234              	.LVL27:
 235 0006 044A     		ldr	r2, .L26
 236 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 237 000a 03F0FC03 		and	r3, r3, #252
 238 000e 43F00203 		orr	r3, r3, #2
 239 0012 8354     		strb	r3, [r0, r2]
 240              	.L24:
 241 0014 7047     		bx	lr
 242              	.L27:
 243 0016 00BF     		.align	2
 244              	.L26:
 245 0018 20A00040 		.word	1073782816
 246              		.cfi_endproc
 247              	.LFE64:
 248              		.size	CAN_TxCancel, .-CAN_TxCancel
 249              		.section	.text.CAN_SendMsgDash_status,"ax",%progbits
 250              		.align	2
 251              		.global	CAN_SendMsgDash_status
 252              		.thumb
 253              		.thumb_func
 254              		.type	CAN_SendMsgDash_status, %function
 255              	CAN_SendMsgDash_status:
 256              	.LFB65:
 184:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 185:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 186:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 187:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 188:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 189:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 190:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgDash_status
 191:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 192:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 193:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 9


 194:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 195:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 196:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 197:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 198:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 199:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 200:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 201:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 202:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 203:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 204:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 205:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 206:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 207:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 208:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 209:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgDash_status(void) 
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 257              		.loc 1 210 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LVL28:
 211:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 212:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 213:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 214:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 263              		.loc 1 214 0
 264 0000 064B     		ldr	r3, .L31
 265 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 0004 13F0010F 		tst	r3, #1
 267 0008 06D1     		bne	.L30
 215:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 216:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 217:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 219:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 220:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 221:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 222:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 223:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_Dash_status_TRASMITTED` */
 224:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 225:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 226:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 227:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_Dash_status_CALLBACK
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_Dash_status_Callback();
 229:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_Dash_status_CALLBACK */
 230:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 231:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 268              		.loc 1 231 0
 269 000a 044A     		ldr	r2, .L31
 270 000c 1368     		ldr	r3, [r2]
 271 000e 43F00103 		orr	r3, r3, #1
 272 0012 1360     		str	r3, [r2]
 211:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 273              		.loc 1 211 0
 274 0014 0020     		movs	r0, #0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 10


 275 0016 7047     		bx	lr
 276              	.L30:
 219:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 277              		.loc 1 219 0
 278 0018 0120     		movs	r0, #1
 279              	.LVL29:
 232:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 233:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 234:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 235:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 236:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 280              		.loc 1 236 0
 281 001a 7047     		bx	lr
 282              	.L32:
 283              		.align	2
 284              	.L31:
 285 001c 20A00040 		.word	1073782816
 286              		.cfi_endproc
 287              	.LFE65:
 288              		.size	CAN_SendMsgDash_status, .-CAN_SendMsgDash_status
 289              		.section	.text.CAN_SendMsgDash_cmd,"ax",%progbits
 290              		.align	2
 291              		.global	CAN_SendMsgDash_cmd
 292              		.thumb
 293              		.thumb_func
 294              		.type	CAN_SendMsgDash_cmd, %function
 295              	CAN_SendMsgDash_cmd:
 296              	.LFB66:
 237:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 238:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 239:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 240:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 241:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 242:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgDash_cmd
 243:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 244:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 245:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 246:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 247:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 248:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 249:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 250:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 251:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 252:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 253:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 254:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 255:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 256:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 257:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 258:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 259:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 260:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 261:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgDash_cmd(void) 
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 297              		.loc 1 262 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 11


 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL30:
 263:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 264:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 265:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 266:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 303              		.loc 1 266 0
 304 0000 064B     		ldr	r3, .L36
 305 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0004 13F0010F 		tst	r3, #1
 307 0008 06D1     		bne	.L35
 267:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 268:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 269:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 271:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 272:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 273:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 274:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 275:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_Dash_cmd_TRASMITTED` */
 276:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 277:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 278:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 279:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_Dash_cmd_CALLBACK
 280:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_Dash_cmd_Callback();
 281:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_Dash_cmd_CALLBACK */
 282:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 308              		.loc 1 283 0
 309 000a 044A     		ldr	r2, .L36
 310 000c 1368     		ldr	r3, [r2]
 311 000e 43F00103 		orr	r3, r3, #1
 312 0012 1360     		str	r3, [r2]
 263:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 313              		.loc 1 263 0
 314 0014 0020     		movs	r0, #0
 315 0016 7047     		bx	lr
 316              	.L35:
 271:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 317              		.loc 1 271 0
 318 0018 0120     		movs	r0, #1
 319              	.LVL31:
 284:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 285:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 286:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 287:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 288:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 320              		.loc 1 288 0
 321 001a 7047     		bx	lr
 322              	.L37:
 323              		.align	2
 324              	.L36:
 325 001c 30A00040 		.word	1073782832
 326              		.cfi_endproc
 327              	.LFE66:
 328              		.size	CAN_SendMsgDash_cmd, .-CAN_SendMsgDash_cmd
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 12


 329              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 330              		.align	2
 331              		.global	CAN_ReceiveMsg
 332              		.thumb
 333              		.thumb_func
 334              		.type	CAN_ReceiveMsg, %function
 335              	CAN_ReceiveMsg:
 336              	.LFB67:
 289:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 290:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 291:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 292:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 293:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 294:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 295:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 296:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 297:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 298:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 299:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 300:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 301:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 302:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 303:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 304:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 305:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 306:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 307:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 308:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 309:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 310:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 311:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 312:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 313:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 314:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 315:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 316:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 317:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 318:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 319:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 320:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 321:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 322:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 323:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 324:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 325:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 326:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 327:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 328:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 329:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 330:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 331:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 332:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 333:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 334:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 335:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 336:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 337:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 13


 338:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 339:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 340:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 341:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 342:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 343:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 344:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 345:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 347:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 349:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 350:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 351:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 352:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 353:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 354:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 355:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 356:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 357:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 358:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 359:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 360:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 361:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 362:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 363:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 364:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 365:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 366:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 367:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 368:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 369:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 370:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 371:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 372:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 373:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 374:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 375:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 376:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 377:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 378:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 379:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 380:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 381:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 382:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 383:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 384:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 385:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 386:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 387:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 388:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 389:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 390:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 391:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 392:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 393:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 394:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 14


 395:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 396:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 397:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 398:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 399:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 400:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 401:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 402:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 403:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 404:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 405:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 406:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 407:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 408:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 409:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 410:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 411:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 412:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 413:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 414:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 415:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 416:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 417:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 418:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 419:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 420:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 421:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 422:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 423:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 424:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 425:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 426:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 427:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 428:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 429:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 430:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 431:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 432:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 433:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 434:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 435:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 436:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 437:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 438:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 439:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 440:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 441:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 442:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 443:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 444:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 445:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 446:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 447:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 448:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 449:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 450:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 451:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 15


 452:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 453:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 454:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 455:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 456:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 457:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 458:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 459:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 460:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 461:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 462:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 463:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 464:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 465:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 466:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 467:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 468:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 469:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 470:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 471:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 472:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 473:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 474:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 475:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 476:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 477:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 478:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 479:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 480:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 481:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 482:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 483:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 484:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 485:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 486:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 487:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 488:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 489:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 490:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 491:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 492:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 493:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 494:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 495:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 496:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 497:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 498:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 499:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 500:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 501:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 502:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 503:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 504:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 505:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 506:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 507:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 508:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 16


 509:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 510:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 511:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 512:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 513:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 514:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 515:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 516:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 517:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 518:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 519:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 520:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 521:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 522:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 523:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 524:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 525:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 526:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 527:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 528:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 529:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 530:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 531:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 532:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 533:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 534:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 535:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 536:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 537:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 538:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 539:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 540:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 541:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 542:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 543:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 544:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 545:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 546:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 547:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 548:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 549:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 550:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 551:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 552:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 553:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 554:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 555:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 556:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 557:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 558:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 559:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 560:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 561:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 562:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 563:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 564:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 565:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 17


 566:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 567:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 568:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 569:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 570:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 571:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 572:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 573:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 574:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 575:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 576:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 577:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 578:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 579:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 580:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 581:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 582:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 583:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 584:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 585:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 586:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 587:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 588:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 589:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 590:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 591:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 592:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 593:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 594:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 595:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 596:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 597:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 598:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 599:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 600:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 601:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 602:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 603:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 604:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 605:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 606:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 607:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 608:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 609:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 610:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 611:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 612:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 613:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 614:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 615:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 616:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 617:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 618:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 619:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Reentrant:
 620:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Depends on the Customer code.
 621:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 622:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 18


 623:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 624:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 337              		.loc 1 624 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 40
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL32:
 342 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 343              		.cfi_def_cfa_offset 20
 344              		.cfi_offset 4, -20
 345              		.cfi_offset 5, -16
 346              		.cfi_offset 6, -12
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 8BB0     		sub	sp, sp, #44
 350              		.cfi_def_cfa_offset 64
 625:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 626:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 351              		.loc 1 626 0
 352 0004 4701     		lsls	r7, r0, #5
 353 0006 184E     		ldr	r6, .L45
 354 0008 BC19     		adds	r4, r7, r6
 355 000a BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 356 000c 13F0010F 		tst	r3, #1
 357 0010 28D0     		beq	.L38
 358              	.LBB2:
 627:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 628:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 629:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 630:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 631:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 632:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 633:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             int ID = CAN_GET_RX_ID(rxMailbox);
 359              		.loc 1 633 0
 360 0012 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 361 0014 13F0100F 		tst	r3, #16
 362 0018 03D0     		beq	.L40
 363              		.loc 1 633 0 is_stmt 0 discriminator 1
 364 001a 6368     		ldr	r3, [r4, #4]
 365 001c 4FEAD30E 		lsr	lr, r3, #3
 366 0020 02E0     		b	.L41
 367              	.L40:
 368              		.loc 1 633 0 discriminator 2
 369 0022 6368     		ldr	r3, [r4, #4]
 370 0024 4FEA535E 		lsr	lr, r3, #21
 371              	.L41:
 372              	.LVL33:
 634:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             CAN_RX_STRUCT test = CAN_RX[rxMailbox]; // is test always 0s?
 373              		.loc 1 634 0 is_stmt 1 discriminator 4
 374 0028 02AD     		add	r5, sp, #8
 375 002a 2068     		ldr	r0, [r4]	@ unaligned
 376              	.LVL34:
 377 002c 6168     		ldr	r1, [r4, #4]	@ unaligned
 378 002e A268     		ldr	r2, [r4, #8]	@ unaligned
 379 0030 E368     		ldr	r3, [r4, #12]	@ unaligned
 380 0032 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 381 0034 2069     		ldr	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 19


 382 0036 6169     		ldr	r1, [r4, #20]	@ unaligned
 383 0038 A269     		ldr	r2, [r4, #24]	@ unaligned
 384 003a E369     		ldr	r3, [r4, #28]	@ unaligned
 385 003c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 386              	.LVL35:
 635:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             uint8_t data[8];
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             int i = 0;
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             for (i = 0; i < 8; i++)
 387              		.loc 1 637 0 discriminator 4
 388 003e 0023     		movs	r3, #0
 389 0040 06E0     		b	.L42
 390              	.LVL36:
 391              	.L43:
 638:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 392              		.loc 1 638 0 discriminator 3
 393 0042 E218     		adds	r2, r4, r3
 394 0044 117A     		ldrb	r1, [r2, #8]	@ zero_extendqisi2
 395 0046 0AAA     		add	r2, sp, #40
 396 0048 1A44     		add	r2, r2, r3
 397 004a 02F8281C 		strb	r1, [r2, #-40]
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 398              		.loc 1 637 0 discriminator 3
 399 004e 0133     		adds	r3, r3, #1
 400              	.LVL37:
 401              	.L42:
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 402              		.loc 1 637 0 is_stmt 0 discriminator 1
 403 0050 072B     		cmp	r3, #7
 404 0052 F6DD     		ble	.L43
 639:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 640:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             can_receive(data, ID);
 405              		.loc 1 640 0 is_stmt 1
 406 0054 7146     		mov	r1, lr
 407 0056 6846     		mov	r0, sp
 408 0058 FFF7FEFF 		bl	can_receive
 409              	.LVL38:
 641:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#END` */
 642:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 643:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 644:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 645:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 647:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 648:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 410              		.loc 1 648 0
 411 005c BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 412 005e 43F00103 		orr	r3, r3, #1
 413 0062 BB55     		strb	r3, [r7, r6]
 414              	.L38:
 415              	.LBE2:
 649:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 650:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 651:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 652:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 653:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 416              		.loc 1 653 0
 417 0064 0BB0     		add	sp, sp, #44
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 20


 418              		.cfi_def_cfa_offset 20
 419              		@ sp needed
 420 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 421              	.L46:
 422              		.align	2
 423              	.L45:
 424 0068 A0A00040 		.word	1073782944
 425              		.cfi_endproc
 426              	.LFE67:
 427              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 428              		.text
 429              	.Letext0:
 430              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 431              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 432              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 433              		.file 5 "Generated_Source\\PSoC5\\CAN.h"
 434              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 435              		.file 7 "./can_manga.h"
 436              		.section	.debug_info,"",%progbits
 437              	.Ldebug_info0:
 438 0000 37040000 		.4byte	0x437
 439 0004 0400     		.2byte	0x4
 440 0006 00000000 		.4byte	.Ldebug_abbrev0
 441 000a 04       		.byte	0x4
 442 000b 01       		.uleb128 0x1
 443 000c 94020000 		.4byte	.LASF53
 444 0010 0C       		.byte	0xc
 445 0011 49020000 		.4byte	.LASF54
 446 0015 47010000 		.4byte	.LASF55
 447 0019 00000000 		.4byte	.Ldebug_ranges0+0
 448 001d 00000000 		.4byte	0
 449 0021 00000000 		.4byte	.Ldebug_line0
 450 0025 02       		.uleb128 0x2
 451 0026 01       		.byte	0x1
 452 0027 06       		.byte	0x6
 453 0028 24010000 		.4byte	.LASF0
 454 002c 03       		.uleb128 0x3
 455 002d C4000000 		.4byte	.LASF4
 456 0031 02       		.byte	0x2
 457 0032 1D       		.byte	0x1d
 458 0033 37000000 		.4byte	0x37
 459 0037 02       		.uleb128 0x2
 460 0038 01       		.byte	0x1
 461 0039 08       		.byte	0x8
 462 003a 16010000 		.4byte	.LASF1
 463 003e 02       		.uleb128 0x2
 464 003f 02       		.byte	0x2
 465 0040 05       		.byte	0x5
 466 0041 22000000 		.4byte	.LASF2
 467 0045 02       		.uleb128 0x2
 468 0046 02       		.byte	0x2
 469 0047 07       		.byte	0x7
 470 0048 B5010000 		.4byte	.LASF3
 471 004c 03       		.uleb128 0x3
 472 004d 3F020000 		.4byte	.LASF5
 473 0051 02       		.byte	0x2
 474 0052 3F       		.byte	0x3f
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 21


 475 0053 57000000 		.4byte	0x57
 476 0057 02       		.uleb128 0x2
 477 0058 04       		.byte	0x4
 478 0059 05       		.byte	0x5
 479 005a A3000000 		.4byte	.LASF6
 480 005e 02       		.uleb128 0x2
 481 005f 04       		.byte	0x4
 482 0060 07       		.byte	0x7
 483 0061 B2000000 		.4byte	.LASF7
 484 0065 02       		.uleb128 0x2
 485 0066 08       		.byte	0x8
 486 0067 05       		.byte	0x5
 487 0068 84000000 		.4byte	.LASF8
 488 006c 02       		.uleb128 0x2
 489 006d 08       		.byte	0x8
 490 006e 07       		.byte	0x7
 491 006f 30010000 		.4byte	.LASF9
 492 0073 04       		.uleb128 0x4
 493 0074 04       		.byte	0x4
 494 0075 05       		.byte	0x5
 495 0076 696E7400 		.ascii	"int\000"
 496 007a 02       		.uleb128 0x2
 497 007b 04       		.byte	0x4
 498 007c 07       		.byte	0x7
 499 007d 8F010000 		.4byte	.LASF10
 500 0081 03       		.uleb128 0x3
 501 0082 65000000 		.4byte	.LASF11
 502 0086 03       		.byte	0x3
 503 0087 18       		.byte	0x18
 504 0088 2C000000 		.4byte	0x2c
 505 008c 03       		.uleb128 0x3
 506 008d E5010000 		.4byte	.LASF12
 507 0091 03       		.byte	0x3
 508 0092 2C       		.byte	0x2c
 509 0093 4C000000 		.4byte	0x4c
 510 0097 05       		.uleb128 0x5
 511 0098 6D000000 		.4byte	.LASF13
 512 009c 04       		.byte	0x4
 513 009d 3801     		.2byte	0x138
 514 009f 37000000 		.4byte	0x37
 515 00a3 05       		.uleb128 0x5
 516 00a4 06020000 		.4byte	.LASF14
 517 00a8 04       		.byte	0x4
 518 00a9 3A01     		.2byte	0x13a
 519 00ab 5E000000 		.4byte	0x5e
 520 00af 02       		.uleb128 0x2
 521 00b0 04       		.byte	0x4
 522 00b1 04       		.byte	0x4
 523 00b2 7E000000 		.4byte	.LASF15
 524 00b6 02       		.uleb128 0x2
 525 00b7 08       		.byte	0x8
 526 00b8 04       		.byte	0x4
 527 00b9 78020000 		.4byte	.LASF16
 528 00bd 02       		.uleb128 0x2
 529 00be 01       		.byte	0x1
 530 00bf 08       		.byte	0x8
 531 00c0 C8010000 		.4byte	.LASF17
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 22


 532 00c4 05       		.uleb128 0x5
 533 00c5 0D020000 		.4byte	.LASF18
 534 00c9 04       		.byte	0x4
 535 00ca E201     		.2byte	0x1e2
 536 00cc D0000000 		.4byte	0xd0
 537 00d0 06       		.uleb128 0x6
 538 00d1 97000000 		.4byte	0x97
 539 00d5 05       		.uleb128 0x5
 540 00d6 AF010000 		.4byte	.LASF19
 541 00da 04       		.byte	0x4
 542 00db E401     		.2byte	0x1e4
 543 00dd E1000000 		.4byte	0xe1
 544 00e1 06       		.uleb128 0x6
 545 00e2 A3000000 		.4byte	0xa3
 546 00e6 02       		.uleb128 0x2
 547 00e7 08       		.byte	0x8
 548 00e8 04       		.byte	0x4
 549 00e9 03010000 		.4byte	.LASF20
 550 00ed 02       		.uleb128 0x2
 551 00ee 04       		.byte	0x4
 552 00ef 07       		.byte	0x7
 553 00f0 3B000000 		.4byte	.LASF21
 554 00f4 07       		.uleb128 0x7
 555 00f5 08       		.byte	0x8
 556 00f6 05       		.byte	0x5
 557 00f7 6F       		.byte	0x6f
 558 00f8 09010000 		.4byte	0x109
 559 00fc 08       		.uleb128 0x8
 560 00fd EA000000 		.4byte	.LASF23
 561 0101 05       		.byte	0x5
 562 0102 71       		.byte	0x71
 563 0103 09010000 		.4byte	0x109
 564 0107 00       		.byte	0
 565 0108 00       		.byte	0
 566 0109 09       		.uleb128 0x9
 567 010a 97000000 		.4byte	0x97
 568 010e 19010000 		.4byte	0x119
 569 0112 0A       		.uleb128 0xa
 570 0113 ED000000 		.4byte	0xed
 571 0117 07       		.byte	0x7
 572 0118 00       		.byte	0
 573 0119 03       		.uleb128 0x3
 574 011a 9C010000 		.4byte	.LASF22
 575 011e 05       		.byte	0x5
 576 011f 72       		.byte	0x72
 577 0120 F4000000 		.4byte	0xf4
 578 0124 07       		.uleb128 0x7
 579 0125 08       		.byte	0x8
 580 0126 05       		.byte	0x5
 581 0127 75       		.byte	0x75
 582 0128 39010000 		.4byte	0x139
 583 012c 08       		.uleb128 0x8
 584 012d EA000000 		.4byte	.LASF23
 585 0131 05       		.byte	0x5
 586 0132 77       		.byte	0x77
 587 0133 49010000 		.4byte	0x149
 588 0137 00       		.byte	0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 23


 589 0138 00       		.byte	0
 590 0139 09       		.uleb128 0x9
 591 013a C4000000 		.4byte	0xc4
 592 013e 49010000 		.4byte	0x149
 593 0142 0A       		.uleb128 0xa
 594 0143 ED000000 		.4byte	0xed
 595 0147 07       		.byte	0x7
 596 0148 00       		.byte	0
 597 0149 06       		.uleb128 0x6
 598 014a 39010000 		.4byte	0x139
 599 014e 03       		.uleb128 0x3
 600 014f 13000000 		.4byte	.LASF24
 601 0153 05       		.byte	0x5
 602 0154 78       		.byte	0x78
 603 0155 24010000 		.4byte	0x124
 604 0159 07       		.uleb128 0x7
 605 015a 04       		.byte	0x4
 606 015b 05       		.byte	0x5
 607 015c 7B       		.byte	0x7b
 608 015d 6E010000 		.4byte	0x16e
 609 0161 08       		.uleb128 0x8
 610 0162 EA000000 		.4byte	.LASF23
 611 0166 05       		.byte	0x5
 612 0167 7D       		.byte	0x7d
 613 0168 7E010000 		.4byte	0x17e
 614 016c 00       		.byte	0
 615 016d 00       		.byte	0
 616 016e 09       		.uleb128 0x9
 617 016f C4000000 		.4byte	0xc4
 618 0173 7E010000 		.4byte	0x17e
 619 0177 0A       		.uleb128 0xa
 620 0178 ED000000 		.4byte	0xed
 621 017c 03       		.byte	0x3
 622 017d 00       		.byte	0
 623 017e 06       		.uleb128 0x6
 624 017f 6E010000 		.4byte	0x16e
 625 0183 03       		.uleb128 0x3
 626 0184 92000000 		.4byte	.LASF25
 627 0188 05       		.byte	0x5
 628 0189 7E       		.byte	0x7e
 629 018a 59010000 		.4byte	0x159
 630 018e 07       		.uleb128 0x7
 631 018f 0C       		.byte	0xc
 632 0190 05       		.byte	0x5
 633 0191 81       		.byte	0x81
 634 0192 DE010000 		.4byte	0x1de
 635 0196 0B       		.uleb128 0xb
 636 0197 696400   		.ascii	"id\000"
 637 019a 05       		.byte	0x5
 638 019b 83       		.byte	0x83
 639 019c A3000000 		.4byte	0xa3
 640 01a0 00       		.byte	0
 641 01a1 0B       		.uleb128 0xb
 642 01a2 72747200 		.ascii	"rtr\000"
 643 01a6 05       		.byte	0x5
 644 01a7 84       		.byte	0x84
 645 01a8 97000000 		.4byte	0x97
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 24


 646 01ac 04       		.byte	0x4
 647 01ad 0B       		.uleb128 0xb
 648 01ae 69646500 		.ascii	"ide\000"
 649 01b2 05       		.byte	0x5
 650 01b3 85       		.byte	0x85
 651 01b4 97000000 		.4byte	0x97
 652 01b8 05       		.byte	0x5
 653 01b9 0B       		.uleb128 0xb
 654 01ba 646C6300 		.ascii	"dlc\000"
 655 01be 05       		.byte	0x5
 656 01bf 86       		.byte	0x86
 657 01c0 97000000 		.4byte	0x97
 658 01c4 06       		.byte	0x6
 659 01c5 0B       		.uleb128 0xb
 660 01c6 69727100 		.ascii	"irq\000"
 661 01ca 05       		.byte	0x5
 662 01cb 87       		.byte	0x87
 663 01cc 97000000 		.4byte	0x97
 664 01d0 07       		.byte	0x7
 665 01d1 0B       		.uleb128 0xb
 666 01d2 6D736700 		.ascii	"msg\000"
 667 01d6 05       		.byte	0x5
 668 01d7 8B       		.byte	0x8b
 669 01d8 DE010000 		.4byte	0x1de
 670 01dc 08       		.byte	0x8
 671 01dd 00       		.byte	0
 672 01de 0C       		.uleb128 0xc
 673 01df 04       		.byte	0x4
 674 01e0 19010000 		.4byte	0x119
 675 01e4 03       		.uleb128 0x3
 676 01e5 1A020000 		.4byte	.LASF26
 677 01e9 05       		.byte	0x5
 678 01ea 8C       		.byte	0x8c
 679 01eb 8E010000 		.4byte	0x18e
 680 01ef 07       		.uleb128 0x7
 681 01f0 20       		.byte	0x20
 682 01f1 05       		.byte	0x5
 683 01f2 A0       		.byte	0xa0
 684 01f3 4C020000 		.4byte	0x24c
 685 01f7 08       		.uleb128 0x8
 686 01f8 ED010000 		.4byte	.LASF27
 687 01fc 05       		.byte	0x5
 688 01fd A2       		.byte	0xa2
 689 01fe 83010000 		.4byte	0x183
 690 0202 00       		.byte	0
 691 0203 08       		.uleb128 0x8
 692 0204 73000000 		.4byte	.LASF28
 693 0208 05       		.byte	0x5
 694 0209 A3       		.byte	0xa3
 695 020a 83010000 		.4byte	0x183
 696 020e 04       		.byte	0x4
 697 020f 08       		.uleb128 0x8
 698 0210 4B000000 		.4byte	.LASF29
 699 0214 05       		.byte	0x5
 700 0215 A4       		.byte	0xa4
 701 0216 4E010000 		.4byte	0x14e
 702 021a 08       		.byte	0x8
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 25


 703 021b 08       		.uleb128 0x8
 704 021c 22030000 		.4byte	.LASF30
 705 0220 05       		.byte	0x5
 706 0221 A5       		.byte	0xa5
 707 0222 83010000 		.4byte	0x183
 708 0226 10       		.byte	0x10
 709 0227 08       		.uleb128 0x8
 710 0228 78000000 		.4byte	.LASF31
 711 022c 05       		.byte	0x5
 712 022d A6       		.byte	0xa6
 713 022e 83010000 		.4byte	0x183
 714 0232 14       		.byte	0x14
 715 0233 08       		.uleb128 0x8
 716 0234 0F010000 		.4byte	.LASF32
 717 0238 05       		.byte	0x5
 718 0239 A7       		.byte	0xa7
 719 023a 83010000 		.4byte	0x183
 720 023e 18       		.byte	0x18
 721 023f 08       		.uleb128 0x8
 722 0240 71020000 		.4byte	.LASF33
 723 0244 05       		.byte	0x5
 724 0245 A8       		.byte	0xa8
 725 0246 83010000 		.4byte	0x183
 726 024a 1C       		.byte	0x1c
 727 024b 00       		.byte	0
 728 024c 03       		.uleb128 0x3
 729 024d CD010000 		.4byte	.LASF34
 730 0251 05       		.byte	0x5
 731 0252 A9       		.byte	0xa9
 732 0253 EF010000 		.4byte	0x1ef
 733 0257 07       		.uleb128 0x7
 734 0258 10       		.byte	0x10
 735 0259 05       		.byte	0x5
 736 025a AC       		.byte	0xac
 737 025b 84020000 		.4byte	0x284
 738 025f 08       		.uleb128 0x8
 739 0260 9D000000 		.4byte	.LASF35
 740 0264 05       		.byte	0x5
 741 0265 AE       		.byte	0xae
 742 0266 83010000 		.4byte	0x183
 743 026a 00       		.byte	0
 744 026b 08       		.uleb128 0x8
 745 026c 3A020000 		.4byte	.LASF36
 746 0270 05       		.byte	0x5
 747 0271 AF       		.byte	0xaf
 748 0272 83010000 		.4byte	0x183
 749 0276 04       		.byte	0x4
 750 0277 08       		.uleb128 0x8
 751 0278 44000000 		.4byte	.LASF37
 752 027c 05       		.byte	0x5
 753 027d B0       		.byte	0xb0
 754 027e 4E010000 		.4byte	0x14e
 755 0282 08       		.byte	0x8
 756 0283 00       		.byte	0
 757 0284 03       		.uleb128 0x3
 758 0285 F8010000 		.4byte	.LASF38
 759 0289 05       		.byte	0x5
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 26


 760 028a B1       		.byte	0xb1
 761 028b 57020000 		.4byte	0x257
 762 028f 09       		.uleb128 0x9
 763 0290 81000000 		.4byte	0x81
 764 0294 9F020000 		.4byte	0x29f
 765 0298 0A       		.uleb128 0xa
 766 0299 ED000000 		.4byte	0xed
 767 029d 07       		.byte	0x7
 768 029e 00       		.byte	0
 769 029f 0D       		.uleb128 0xd
 770 02a0 25020000 		.4byte	.LASF45
 771 02a4 01       		.byte	0x1
 772 02a5 35       		.byte	0x35
 773 02a6 97000000 		.4byte	0x97
 774 02aa 00000000 		.4byte	.LFB63
 775 02ae DC000000 		.4byte	.LFE63-.LFB63
 776 02b2 01       		.uleb128 0x1
 777 02b3 9C       		.byte	0x9c
 778 02b4 1E030000 		.4byte	0x31e
 779 02b8 0E       		.uleb128 0xe
 780 02b9 12020000 		.4byte	.LASF43
 781 02bd 01       		.byte	0x1
 782 02be 35       		.byte	0x35
 783 02bf 1E030000 		.4byte	0x31e
 784 02c3 00000000 		.4byte	.LLST0
 785 02c7 0F       		.uleb128 0xf
 786 02c8 6900     		.ascii	"i\000"
 787 02ca 01       		.byte	0x1
 788 02cb 37       		.byte	0x37
 789 02cc 97000000 		.4byte	0x97
 790 02d0 21000000 		.4byte	.LLST1
 791 02d4 0F       		.uleb128 0xf
 792 02d5 6A00     		.ascii	"j\000"
 793 02d7 01       		.byte	0x1
 794 02d8 37       		.byte	0x37
 795 02d9 97000000 		.4byte	0x97
 796 02dd 4A000000 		.4byte	.LLST2
 797 02e1 10       		.uleb128 0x10
 798 02e2 AC000000 		.4byte	.LASF39
 799 02e6 01       		.byte	0x1
 800 02e7 37       		.byte	0x37
 801 02e8 97000000 		.4byte	0x97
 802 02ec 74000000 		.4byte	.LLST3
 803 02f0 10       		.uleb128 0x10
 804 02f1 5F000000 		.4byte	.LASF40
 805 02f5 01       		.byte	0x1
 806 02f6 38       		.byte	0x38
 807 02f7 97000000 		.4byte	0x97
 808 02fb 92000000 		.4byte	.LLST4
 809 02ff 10       		.uleb128 0x10
 810 0300 0C000000 		.4byte	.LASF41
 811 0304 01       		.byte	0x1
 812 0305 39       		.byte	0x39
 813 0306 97000000 		.4byte	0x97
 814 030a BC000000 		.4byte	.LLST5
 815 030e 10       		.uleb128 0x10
 816 030f 7F020000 		.4byte	.LASF42
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 27


 817 0313 01       		.byte	0x1
 818 0314 3A       		.byte	0x3a
 819 0315 A3000000 		.4byte	0xa3
 820 0319 F2000000 		.4byte	.LLST6
 821 031d 00       		.byte	0
 822 031e 0C       		.uleb128 0xc
 823 031f 04       		.byte	0x4
 824 0320 24030000 		.4byte	0x324
 825 0324 11       		.uleb128 0x11
 826 0325 E4010000 		.4byte	0x1e4
 827 0329 12       		.uleb128 0x12
 828 032a 52000000 		.4byte	.LASF48
 829 032e 01       		.byte	0x1
 830 032f B3       		.byte	0xb3
 831 0330 00000000 		.4byte	.LFB64
 832 0334 1C000000 		.4byte	.LFE64-.LFB64
 833 0338 01       		.uleb128 0x1
 834 0339 9C       		.byte	0x9c
 835 033a 4E030000 		.4byte	0x34e
 836 033e 0E       		.uleb128 0xe
 837 033f 31020000 		.4byte	.LASF44
 838 0343 01       		.byte	0x1
 839 0344 B3       		.byte	0xb3
 840 0345 97000000 		.4byte	0x97
 841 0349 32010000 		.4byte	.LLST7
 842 034d 00       		.byte	0
 843 034e 0D       		.uleb128 0xd
 844 034f CE000000 		.4byte	.LASF46
 845 0353 01       		.byte	0x1
 846 0354 D1       		.byte	0xd1
 847 0355 97000000 		.4byte	0x97
 848 0359 00000000 		.4byte	.LFB65
 849 035d 20000000 		.4byte	.LFE65-.LFB65
 850 0361 01       		.uleb128 0x1
 851 0362 9C       		.byte	0x9c
 852 0363 77030000 		.4byte	0x377
 853 0367 10       		.uleb128 0x10
 854 0368 0C000000 		.4byte	.LASF41
 855 036c 01       		.byte	0x1
 856 036d D3       		.byte	0xd3
 857 036e 97000000 		.4byte	0x97
 858 0372 53010000 		.4byte	.LLST8
 859 0376 00       		.byte	0
 860 0377 13       		.uleb128 0x13
 861 0378 EF000000 		.4byte	.LASF47
 862 037c 01       		.byte	0x1
 863 037d 0501     		.2byte	0x105
 864 037f 97000000 		.4byte	0x97
 865 0383 00000000 		.4byte	.LFB66
 866 0387 20000000 		.4byte	.LFE66-.LFB66
 867 038b 01       		.uleb128 0x1
 868 038c 9C       		.byte	0x9c
 869 038d A2030000 		.4byte	0x3a2
 870 0391 14       		.uleb128 0x14
 871 0392 0C000000 		.4byte	.LASF41
 872 0396 01       		.byte	0x1
 873 0397 0701     		.2byte	0x107
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 28


 874 0399 97000000 		.4byte	0x97
 875 039d 72010000 		.4byte	.LLST9
 876 03a1 00       		.byte	0
 877 03a2 15       		.uleb128 0x15
 878 03a3 2C000000 		.4byte	.LASF49
 879 03a7 01       		.byte	0x1
 880 03a8 6F02     		.2byte	0x26f
 881 03aa 00000000 		.4byte	.LFB67
 882 03ae 6C000000 		.4byte	.LFE67-.LFB67
 883 03b2 01       		.uleb128 0x1
 884 03b3 9C       		.byte	0x9c
 885 03b4 1E040000 		.4byte	0x41e
 886 03b8 16       		.uleb128 0x16
 887 03b9 DB010000 		.4byte	.LASF50
 888 03bd 01       		.byte	0x1
 889 03be 6F02     		.2byte	0x26f
 890 03c0 97000000 		.4byte	0x97
 891 03c4 91010000 		.4byte	.LLST10
 892 03c8 17       		.uleb128 0x17
 893 03c9 12000000 		.4byte	.LBB2
 894 03cd 52000000 		.4byte	.LBE2-.LBB2
 895 03d1 18       		.uleb128 0x18
 896 03d2 494400   		.ascii	"ID\000"
 897 03d5 01       		.byte	0x1
 898 03d6 7902     		.2byte	0x279
 899 03d8 73000000 		.4byte	0x73
 900 03dc B2010000 		.4byte	.LLST11
 901 03e0 19       		.uleb128 0x19
 902 03e1 E5000000 		.4byte	.LASF51
 903 03e5 01       		.byte	0x1
 904 03e6 7A02     		.2byte	0x27a
 905 03e8 4C020000 		.4byte	0x24c
 906 03ec 02       		.uleb128 0x2
 907 03ed 91       		.byte	0x91
 908 03ee 48       		.sleb128 -56
 909 03ef 19       		.uleb128 0x19
 910 03f0 F3010000 		.4byte	.LASF52
 911 03f4 01       		.byte	0x1
 912 03f5 7B02     		.2byte	0x27b
 913 03f7 8F020000 		.4byte	0x28f
 914 03fb 02       		.uleb128 0x2
 915 03fc 91       		.byte	0x91
 916 03fd 40       		.sleb128 -64
 917 03fe 18       		.uleb128 0x18
 918 03ff 6900     		.ascii	"i\000"
 919 0401 01       		.byte	0x1
 920 0402 7C02     		.2byte	0x27c
 921 0404 73000000 		.4byte	0x73
 922 0408 C5010000 		.4byte	.LLST12
 923 040c 1A       		.uleb128 0x1a
 924 040d 5C000000 		.4byte	.LVL38
 925 0411 2F040000 		.4byte	0x42f
 926 0415 1B       		.uleb128 0x1b
 927 0416 01       		.uleb128 0x1
 928 0417 50       		.byte	0x50
 929 0418 02       		.uleb128 0x2
 930 0419 7D       		.byte	0x7d
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 29


 931 041a 00       		.sleb128 0
 932 041b 00       		.byte	0
 933 041c 00       		.byte	0
 934 041d 00       		.byte	0
 935 041e 1C       		.uleb128 0x1c
 936 041f 87020000 		.4byte	.LASF56
 937 0423 06       		.byte	0x6
 938 0424 5506     		.2byte	0x655
 939 0426 2A040000 		.4byte	0x42a
 940 042a 06       		.uleb128 0x6
 941 042b 8C000000 		.4byte	0x8c
 942 042f 1D       		.uleb128 0x1d
 943 0430 00000000 		.4byte	.LASF57
 944 0434 00000000 		.4byte	.LASF57
 945 0438 07       		.byte	0x7
 946 0439 1E       		.byte	0x1e
 947 043a 00       		.byte	0
 948              		.section	.debug_abbrev,"",%progbits
 949              	.Ldebug_abbrev0:
 950 0000 01       		.uleb128 0x1
 951 0001 11       		.uleb128 0x11
 952 0002 01       		.byte	0x1
 953 0003 25       		.uleb128 0x25
 954 0004 0E       		.uleb128 0xe
 955 0005 13       		.uleb128 0x13
 956 0006 0B       		.uleb128 0xb
 957 0007 03       		.uleb128 0x3
 958 0008 0E       		.uleb128 0xe
 959 0009 1B       		.uleb128 0x1b
 960 000a 0E       		.uleb128 0xe
 961 000b 55       		.uleb128 0x55
 962 000c 17       		.uleb128 0x17
 963 000d 11       		.uleb128 0x11
 964 000e 01       		.uleb128 0x1
 965 000f 10       		.uleb128 0x10
 966 0010 17       		.uleb128 0x17
 967 0011 00       		.byte	0
 968 0012 00       		.byte	0
 969 0013 02       		.uleb128 0x2
 970 0014 24       		.uleb128 0x24
 971 0015 00       		.byte	0
 972 0016 0B       		.uleb128 0xb
 973 0017 0B       		.uleb128 0xb
 974 0018 3E       		.uleb128 0x3e
 975 0019 0B       		.uleb128 0xb
 976 001a 03       		.uleb128 0x3
 977 001b 0E       		.uleb128 0xe
 978 001c 00       		.byte	0
 979 001d 00       		.byte	0
 980 001e 03       		.uleb128 0x3
 981 001f 16       		.uleb128 0x16
 982 0020 00       		.byte	0
 983 0021 03       		.uleb128 0x3
 984 0022 0E       		.uleb128 0xe
 985 0023 3A       		.uleb128 0x3a
 986 0024 0B       		.uleb128 0xb
 987 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 30


 988 0026 0B       		.uleb128 0xb
 989 0027 49       		.uleb128 0x49
 990 0028 13       		.uleb128 0x13
 991 0029 00       		.byte	0
 992 002a 00       		.byte	0
 993 002b 04       		.uleb128 0x4
 994 002c 24       		.uleb128 0x24
 995 002d 00       		.byte	0
 996 002e 0B       		.uleb128 0xb
 997 002f 0B       		.uleb128 0xb
 998 0030 3E       		.uleb128 0x3e
 999 0031 0B       		.uleb128 0xb
 1000 0032 03       		.uleb128 0x3
 1001 0033 08       		.uleb128 0x8
 1002 0034 00       		.byte	0
 1003 0035 00       		.byte	0
 1004 0036 05       		.uleb128 0x5
 1005 0037 16       		.uleb128 0x16
 1006 0038 00       		.byte	0
 1007 0039 03       		.uleb128 0x3
 1008 003a 0E       		.uleb128 0xe
 1009 003b 3A       		.uleb128 0x3a
 1010 003c 0B       		.uleb128 0xb
 1011 003d 3B       		.uleb128 0x3b
 1012 003e 05       		.uleb128 0x5
 1013 003f 49       		.uleb128 0x49
 1014 0040 13       		.uleb128 0x13
 1015 0041 00       		.byte	0
 1016 0042 00       		.byte	0
 1017 0043 06       		.uleb128 0x6
 1018 0044 35       		.uleb128 0x35
 1019 0045 00       		.byte	0
 1020 0046 49       		.uleb128 0x49
 1021 0047 13       		.uleb128 0x13
 1022 0048 00       		.byte	0
 1023 0049 00       		.byte	0
 1024 004a 07       		.uleb128 0x7
 1025 004b 13       		.uleb128 0x13
 1026 004c 01       		.byte	0x1
 1027 004d 0B       		.uleb128 0xb
 1028 004e 0B       		.uleb128 0xb
 1029 004f 3A       		.uleb128 0x3a
 1030 0050 0B       		.uleb128 0xb
 1031 0051 3B       		.uleb128 0x3b
 1032 0052 0B       		.uleb128 0xb
 1033 0053 01       		.uleb128 0x1
 1034 0054 13       		.uleb128 0x13
 1035 0055 00       		.byte	0
 1036 0056 00       		.byte	0
 1037 0057 08       		.uleb128 0x8
 1038 0058 0D       		.uleb128 0xd
 1039 0059 00       		.byte	0
 1040 005a 03       		.uleb128 0x3
 1041 005b 0E       		.uleb128 0xe
 1042 005c 3A       		.uleb128 0x3a
 1043 005d 0B       		.uleb128 0xb
 1044 005e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 31


 1045 005f 0B       		.uleb128 0xb
 1046 0060 49       		.uleb128 0x49
 1047 0061 13       		.uleb128 0x13
 1048 0062 38       		.uleb128 0x38
 1049 0063 0B       		.uleb128 0xb
 1050 0064 00       		.byte	0
 1051 0065 00       		.byte	0
 1052 0066 09       		.uleb128 0x9
 1053 0067 01       		.uleb128 0x1
 1054 0068 01       		.byte	0x1
 1055 0069 49       		.uleb128 0x49
 1056 006a 13       		.uleb128 0x13
 1057 006b 01       		.uleb128 0x1
 1058 006c 13       		.uleb128 0x13
 1059 006d 00       		.byte	0
 1060 006e 00       		.byte	0
 1061 006f 0A       		.uleb128 0xa
 1062 0070 21       		.uleb128 0x21
 1063 0071 00       		.byte	0
 1064 0072 49       		.uleb128 0x49
 1065 0073 13       		.uleb128 0x13
 1066 0074 2F       		.uleb128 0x2f
 1067 0075 0B       		.uleb128 0xb
 1068 0076 00       		.byte	0
 1069 0077 00       		.byte	0
 1070 0078 0B       		.uleb128 0xb
 1071 0079 0D       		.uleb128 0xd
 1072 007a 00       		.byte	0
 1073 007b 03       		.uleb128 0x3
 1074 007c 08       		.uleb128 0x8
 1075 007d 3A       		.uleb128 0x3a
 1076 007e 0B       		.uleb128 0xb
 1077 007f 3B       		.uleb128 0x3b
 1078 0080 0B       		.uleb128 0xb
 1079 0081 49       		.uleb128 0x49
 1080 0082 13       		.uleb128 0x13
 1081 0083 38       		.uleb128 0x38
 1082 0084 0B       		.uleb128 0xb
 1083 0085 00       		.byte	0
 1084 0086 00       		.byte	0
 1085 0087 0C       		.uleb128 0xc
 1086 0088 0F       		.uleb128 0xf
 1087 0089 00       		.byte	0
 1088 008a 0B       		.uleb128 0xb
 1089 008b 0B       		.uleb128 0xb
 1090 008c 49       		.uleb128 0x49
 1091 008d 13       		.uleb128 0x13
 1092 008e 00       		.byte	0
 1093 008f 00       		.byte	0
 1094 0090 0D       		.uleb128 0xd
 1095 0091 2E       		.uleb128 0x2e
 1096 0092 01       		.byte	0x1
 1097 0093 3F       		.uleb128 0x3f
 1098 0094 19       		.uleb128 0x19
 1099 0095 03       		.uleb128 0x3
 1100 0096 0E       		.uleb128 0xe
 1101 0097 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 32


 1102 0098 0B       		.uleb128 0xb
 1103 0099 3B       		.uleb128 0x3b
 1104 009a 0B       		.uleb128 0xb
 1105 009b 27       		.uleb128 0x27
 1106 009c 19       		.uleb128 0x19
 1107 009d 49       		.uleb128 0x49
 1108 009e 13       		.uleb128 0x13
 1109 009f 11       		.uleb128 0x11
 1110 00a0 01       		.uleb128 0x1
 1111 00a1 12       		.uleb128 0x12
 1112 00a2 06       		.uleb128 0x6
 1113 00a3 40       		.uleb128 0x40
 1114 00a4 18       		.uleb128 0x18
 1115 00a5 9742     		.uleb128 0x2117
 1116 00a7 19       		.uleb128 0x19
 1117 00a8 01       		.uleb128 0x1
 1118 00a9 13       		.uleb128 0x13
 1119 00aa 00       		.byte	0
 1120 00ab 00       		.byte	0
 1121 00ac 0E       		.uleb128 0xe
 1122 00ad 05       		.uleb128 0x5
 1123 00ae 00       		.byte	0
 1124 00af 03       		.uleb128 0x3
 1125 00b0 0E       		.uleb128 0xe
 1126 00b1 3A       		.uleb128 0x3a
 1127 00b2 0B       		.uleb128 0xb
 1128 00b3 3B       		.uleb128 0x3b
 1129 00b4 0B       		.uleb128 0xb
 1130 00b5 49       		.uleb128 0x49
 1131 00b6 13       		.uleb128 0x13
 1132 00b7 02       		.uleb128 0x2
 1133 00b8 17       		.uleb128 0x17
 1134 00b9 00       		.byte	0
 1135 00ba 00       		.byte	0
 1136 00bb 0F       		.uleb128 0xf
 1137 00bc 34       		.uleb128 0x34
 1138 00bd 00       		.byte	0
 1139 00be 03       		.uleb128 0x3
 1140 00bf 08       		.uleb128 0x8
 1141 00c0 3A       		.uleb128 0x3a
 1142 00c1 0B       		.uleb128 0xb
 1143 00c2 3B       		.uleb128 0x3b
 1144 00c3 0B       		.uleb128 0xb
 1145 00c4 49       		.uleb128 0x49
 1146 00c5 13       		.uleb128 0x13
 1147 00c6 02       		.uleb128 0x2
 1148 00c7 17       		.uleb128 0x17
 1149 00c8 00       		.byte	0
 1150 00c9 00       		.byte	0
 1151 00ca 10       		.uleb128 0x10
 1152 00cb 34       		.uleb128 0x34
 1153 00cc 00       		.byte	0
 1154 00cd 03       		.uleb128 0x3
 1155 00ce 0E       		.uleb128 0xe
 1156 00cf 3A       		.uleb128 0x3a
 1157 00d0 0B       		.uleb128 0xb
 1158 00d1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 33


 1159 00d2 0B       		.uleb128 0xb
 1160 00d3 49       		.uleb128 0x49
 1161 00d4 13       		.uleb128 0x13
 1162 00d5 02       		.uleb128 0x2
 1163 00d6 17       		.uleb128 0x17
 1164 00d7 00       		.byte	0
 1165 00d8 00       		.byte	0
 1166 00d9 11       		.uleb128 0x11
 1167 00da 26       		.uleb128 0x26
 1168 00db 00       		.byte	0
 1169 00dc 49       		.uleb128 0x49
 1170 00dd 13       		.uleb128 0x13
 1171 00de 00       		.byte	0
 1172 00df 00       		.byte	0
 1173 00e0 12       		.uleb128 0x12
 1174 00e1 2E       		.uleb128 0x2e
 1175 00e2 01       		.byte	0x1
 1176 00e3 3F       		.uleb128 0x3f
 1177 00e4 19       		.uleb128 0x19
 1178 00e5 03       		.uleb128 0x3
 1179 00e6 0E       		.uleb128 0xe
 1180 00e7 3A       		.uleb128 0x3a
 1181 00e8 0B       		.uleb128 0xb
 1182 00e9 3B       		.uleb128 0x3b
 1183 00ea 0B       		.uleb128 0xb
 1184 00eb 27       		.uleb128 0x27
 1185 00ec 19       		.uleb128 0x19
 1186 00ed 11       		.uleb128 0x11
 1187 00ee 01       		.uleb128 0x1
 1188 00ef 12       		.uleb128 0x12
 1189 00f0 06       		.uleb128 0x6
 1190 00f1 40       		.uleb128 0x40
 1191 00f2 18       		.uleb128 0x18
 1192 00f3 9742     		.uleb128 0x2117
 1193 00f5 19       		.uleb128 0x19
 1194 00f6 01       		.uleb128 0x1
 1195 00f7 13       		.uleb128 0x13
 1196 00f8 00       		.byte	0
 1197 00f9 00       		.byte	0
 1198 00fa 13       		.uleb128 0x13
 1199 00fb 2E       		.uleb128 0x2e
 1200 00fc 01       		.byte	0x1
 1201 00fd 3F       		.uleb128 0x3f
 1202 00fe 19       		.uleb128 0x19
 1203 00ff 03       		.uleb128 0x3
 1204 0100 0E       		.uleb128 0xe
 1205 0101 3A       		.uleb128 0x3a
 1206 0102 0B       		.uleb128 0xb
 1207 0103 3B       		.uleb128 0x3b
 1208 0104 05       		.uleb128 0x5
 1209 0105 27       		.uleb128 0x27
 1210 0106 19       		.uleb128 0x19
 1211 0107 49       		.uleb128 0x49
 1212 0108 13       		.uleb128 0x13
 1213 0109 11       		.uleb128 0x11
 1214 010a 01       		.uleb128 0x1
 1215 010b 12       		.uleb128 0x12
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 34


 1216 010c 06       		.uleb128 0x6
 1217 010d 40       		.uleb128 0x40
 1218 010e 18       		.uleb128 0x18
 1219 010f 9742     		.uleb128 0x2117
 1220 0111 19       		.uleb128 0x19
 1221 0112 01       		.uleb128 0x1
 1222 0113 13       		.uleb128 0x13
 1223 0114 00       		.byte	0
 1224 0115 00       		.byte	0
 1225 0116 14       		.uleb128 0x14
 1226 0117 34       		.uleb128 0x34
 1227 0118 00       		.byte	0
 1228 0119 03       		.uleb128 0x3
 1229 011a 0E       		.uleb128 0xe
 1230 011b 3A       		.uleb128 0x3a
 1231 011c 0B       		.uleb128 0xb
 1232 011d 3B       		.uleb128 0x3b
 1233 011e 05       		.uleb128 0x5
 1234 011f 49       		.uleb128 0x49
 1235 0120 13       		.uleb128 0x13
 1236 0121 02       		.uleb128 0x2
 1237 0122 17       		.uleb128 0x17
 1238 0123 00       		.byte	0
 1239 0124 00       		.byte	0
 1240 0125 15       		.uleb128 0x15
 1241 0126 2E       		.uleb128 0x2e
 1242 0127 01       		.byte	0x1
 1243 0128 3F       		.uleb128 0x3f
 1244 0129 19       		.uleb128 0x19
 1245 012a 03       		.uleb128 0x3
 1246 012b 0E       		.uleb128 0xe
 1247 012c 3A       		.uleb128 0x3a
 1248 012d 0B       		.uleb128 0xb
 1249 012e 3B       		.uleb128 0x3b
 1250 012f 05       		.uleb128 0x5
 1251 0130 27       		.uleb128 0x27
 1252 0131 19       		.uleb128 0x19
 1253 0132 11       		.uleb128 0x11
 1254 0133 01       		.uleb128 0x1
 1255 0134 12       		.uleb128 0x12
 1256 0135 06       		.uleb128 0x6
 1257 0136 40       		.uleb128 0x40
 1258 0137 18       		.uleb128 0x18
 1259 0138 9742     		.uleb128 0x2117
 1260 013a 19       		.uleb128 0x19
 1261 013b 01       		.uleb128 0x1
 1262 013c 13       		.uleb128 0x13
 1263 013d 00       		.byte	0
 1264 013e 00       		.byte	0
 1265 013f 16       		.uleb128 0x16
 1266 0140 05       		.uleb128 0x5
 1267 0141 00       		.byte	0
 1268 0142 03       		.uleb128 0x3
 1269 0143 0E       		.uleb128 0xe
 1270 0144 3A       		.uleb128 0x3a
 1271 0145 0B       		.uleb128 0xb
 1272 0146 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 35


 1273 0147 05       		.uleb128 0x5
 1274 0148 49       		.uleb128 0x49
 1275 0149 13       		.uleb128 0x13
 1276 014a 02       		.uleb128 0x2
 1277 014b 17       		.uleb128 0x17
 1278 014c 00       		.byte	0
 1279 014d 00       		.byte	0
 1280 014e 17       		.uleb128 0x17
 1281 014f 0B       		.uleb128 0xb
 1282 0150 01       		.byte	0x1
 1283 0151 11       		.uleb128 0x11
 1284 0152 01       		.uleb128 0x1
 1285 0153 12       		.uleb128 0x12
 1286 0154 06       		.uleb128 0x6
 1287 0155 00       		.byte	0
 1288 0156 00       		.byte	0
 1289 0157 18       		.uleb128 0x18
 1290 0158 34       		.uleb128 0x34
 1291 0159 00       		.byte	0
 1292 015a 03       		.uleb128 0x3
 1293 015b 08       		.uleb128 0x8
 1294 015c 3A       		.uleb128 0x3a
 1295 015d 0B       		.uleb128 0xb
 1296 015e 3B       		.uleb128 0x3b
 1297 015f 05       		.uleb128 0x5
 1298 0160 49       		.uleb128 0x49
 1299 0161 13       		.uleb128 0x13
 1300 0162 02       		.uleb128 0x2
 1301 0163 17       		.uleb128 0x17
 1302 0164 00       		.byte	0
 1303 0165 00       		.byte	0
 1304 0166 19       		.uleb128 0x19
 1305 0167 34       		.uleb128 0x34
 1306 0168 00       		.byte	0
 1307 0169 03       		.uleb128 0x3
 1308 016a 0E       		.uleb128 0xe
 1309 016b 3A       		.uleb128 0x3a
 1310 016c 0B       		.uleb128 0xb
 1311 016d 3B       		.uleb128 0x3b
 1312 016e 05       		.uleb128 0x5
 1313 016f 49       		.uleb128 0x49
 1314 0170 13       		.uleb128 0x13
 1315 0171 02       		.uleb128 0x2
 1316 0172 18       		.uleb128 0x18
 1317 0173 00       		.byte	0
 1318 0174 00       		.byte	0
 1319 0175 1A       		.uleb128 0x1a
 1320 0176 898201   		.uleb128 0x4109
 1321 0179 01       		.byte	0x1
 1322 017a 11       		.uleb128 0x11
 1323 017b 01       		.uleb128 0x1
 1324 017c 31       		.uleb128 0x31
 1325 017d 13       		.uleb128 0x13
 1326 017e 00       		.byte	0
 1327 017f 00       		.byte	0
 1328 0180 1B       		.uleb128 0x1b
 1329 0181 8A8201   		.uleb128 0x410a
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 36


 1330 0184 00       		.byte	0
 1331 0185 02       		.uleb128 0x2
 1332 0186 18       		.uleb128 0x18
 1333 0187 9142     		.uleb128 0x2111
 1334 0189 18       		.uleb128 0x18
 1335 018a 00       		.byte	0
 1336 018b 00       		.byte	0
 1337 018c 1C       		.uleb128 0x1c
 1338 018d 34       		.uleb128 0x34
 1339 018e 00       		.byte	0
 1340 018f 03       		.uleb128 0x3
 1341 0190 0E       		.uleb128 0xe
 1342 0191 3A       		.uleb128 0x3a
 1343 0192 0B       		.uleb128 0xb
 1344 0193 3B       		.uleb128 0x3b
 1345 0194 05       		.uleb128 0x5
 1346 0195 49       		.uleb128 0x49
 1347 0196 13       		.uleb128 0x13
 1348 0197 3F       		.uleb128 0x3f
 1349 0198 19       		.uleb128 0x19
 1350 0199 3C       		.uleb128 0x3c
 1351 019a 19       		.uleb128 0x19
 1352 019b 00       		.byte	0
 1353 019c 00       		.byte	0
 1354 019d 1D       		.uleb128 0x1d
 1355 019e 2E       		.uleb128 0x2e
 1356 019f 00       		.byte	0
 1357 01a0 3F       		.uleb128 0x3f
 1358 01a1 19       		.uleb128 0x19
 1359 01a2 3C       		.uleb128 0x3c
 1360 01a3 19       		.uleb128 0x19
 1361 01a4 6E       		.uleb128 0x6e
 1362 01a5 0E       		.uleb128 0xe
 1363 01a6 03       		.uleb128 0x3
 1364 01a7 0E       		.uleb128 0xe
 1365 01a8 3A       		.uleb128 0x3a
 1366 01a9 0B       		.uleb128 0xb
 1367 01aa 3B       		.uleb128 0x3b
 1368 01ab 0B       		.uleb128 0xb
 1369 01ac 00       		.byte	0
 1370 01ad 00       		.byte	0
 1371 01ae 00       		.byte	0
 1372              		.section	.debug_loc,"",%progbits
 1373              	.Ldebug_loc0:
 1374              	.LLST0:
 1375 0000 00000000 		.4byte	.LVL0
 1376 0004 CA000000 		.4byte	.LVL24
 1377 0008 0100     		.2byte	0x1
 1378 000a 50       		.byte	0x50
 1379 000b CA000000 		.4byte	.LVL24
 1380 000f DC000000 		.4byte	.LFE63
 1381 0013 0400     		.2byte	0x4
 1382 0015 F3       		.byte	0xf3
 1383 0016 01       		.uleb128 0x1
 1384 0017 50       		.byte	0x50
 1385 0018 9F       		.byte	0x9f
 1386 0019 00000000 		.4byte	0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 37


 1387 001d 00000000 		.4byte	0
 1388              	.LLST1:
 1389 0021 08000000 		.4byte	.LVL2
 1390 0025 B2000000 		.4byte	.LVL18
 1391 0029 0100     		.2byte	0x1
 1392 002b 52       		.byte	0x52
 1393 002c B4000000 		.4byte	.LVL19
 1394 0030 B6000000 		.4byte	.LVL20
 1395 0034 0100     		.2byte	0x1
 1396 0036 52       		.byte	0x52
 1397 0037 BA000000 		.4byte	.LVL21
 1398 003b C4000000 		.4byte	.LVL23
 1399 003f 0100     		.2byte	0x1
 1400 0041 52       		.byte	0x52
 1401 0042 00000000 		.4byte	0
 1402 0046 00000000 		.4byte	0
 1403              	.LLST2:
 1404 004a 5C000000 		.4byte	.LVL10
 1405 004e 60000000 		.4byte	.LVL11
 1406 0052 0200     		.2byte	0x2
 1407 0054 30       		.byte	0x30
 1408 0055 9F       		.byte	0x9f
 1409 0056 60000000 		.4byte	.LVL11
 1410 005a 7E000000 		.4byte	.LVL12
 1411 005e 0100     		.2byte	0x1
 1412 0060 53       		.byte	0x53
 1413 0061 80000000 		.4byte	.LVL13
 1414 0065 90000000 		.4byte	.LVL14
 1415 0069 0100     		.2byte	0x1
 1416 006b 53       		.byte	0x53
 1417 006c 00000000 		.4byte	0
 1418 0070 00000000 		.4byte	0
 1419              	.LLST3:
 1420 0074 08000000 		.4byte	.LVL2
 1421 0078 B6000000 		.4byte	.LVL20
 1422 007c 0100     		.2byte	0x1
 1423 007e 57       		.byte	0x57
 1424 007f BA000000 		.4byte	.LVL21
 1425 0083 C4000000 		.4byte	.LVL23
 1426 0087 0100     		.2byte	0x1
 1427 0089 57       		.byte	0x57
 1428 008a 00000000 		.4byte	0
 1429 008e 00000000 		.4byte	0
 1430              	.LLST4:
 1431 0092 02000000 		.4byte	.LVL1
 1432 0096 08000000 		.4byte	.LVL2
 1433 009a 0200     		.2byte	0x2
 1434 009c 30       		.byte	0x30
 1435 009d 9F       		.byte	0x9f
 1436 009e 08000000 		.4byte	.LVL2
 1437 00a2 C2000000 		.4byte	.LVL22
 1438 00a6 0100     		.2byte	0x1
 1439 00a8 56       		.byte	0x56
 1440 00a9 C4000000 		.4byte	.LVL23
 1441 00ad CC000000 		.4byte	.LVL25
 1442 00b1 0100     		.2byte	0x1
 1443 00b3 56       		.byte	0x56
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 38


 1444 00b4 00000000 		.4byte	0
 1445 00b8 00000000 		.4byte	0
 1446              	.LLST5:
 1447 00bc 02000000 		.4byte	.LVL1
 1448 00c0 08000000 		.4byte	.LVL2
 1449 00c4 0200     		.2byte	0x2
 1450 00c6 31       		.byte	0x31
 1451 00c7 9F       		.byte	0x9f
 1452 00c8 08000000 		.4byte	.LVL2
 1453 00cc 20000000 		.4byte	.LVL5
 1454 00d0 0100     		.2byte	0x1
 1455 00d2 51       		.byte	0x51
 1456 00d3 A8000000 		.4byte	.LVL15
 1457 00d7 AA000000 		.4byte	.LVL16
 1458 00db 0200     		.2byte	0x2
 1459 00dd 30       		.byte	0x30
 1460 00de 9F       		.byte	0x9f
 1461 00df AA000000 		.4byte	.LVL16
 1462 00e3 DC000000 		.4byte	.LFE63
 1463 00e7 0100     		.2byte	0x1
 1464 00e9 51       		.byte	0x51
 1465 00ea 00000000 		.4byte	0
 1466 00ee 00000000 		.4byte	0
 1467              	.LLST6:
 1468 00f2 16000000 		.4byte	.LVL3
 1469 00f6 1E000000 		.4byte	.LVL4
 1470 00fa 0200     		.2byte	0x2
 1471 00fc 30       		.byte	0x30
 1472 00fd 9F       		.byte	0x9f
 1473 00fe 1E000000 		.4byte	.LVL4
 1474 0102 4E000000 		.4byte	.LVL7
 1475 0106 0100     		.2byte	0x1
 1476 0108 53       		.byte	0x53
 1477 0109 4E000000 		.4byte	.LVL7
 1478 010d 50000000 		.4byte	.LVL8
 1479 0111 0100     		.2byte	0x1
 1480 0113 5E       		.byte	0x5e
 1481 0114 50000000 		.4byte	.LVL8
 1482 0118 54000000 		.4byte	.LVL9
 1483 011c 0100     		.2byte	0x1
 1484 011e 53       		.byte	0x53
 1485 011f 54000000 		.4byte	.LVL9
 1486 0123 AA000000 		.4byte	.LVL16
 1487 0127 0100     		.2byte	0x1
 1488 0129 5E       		.byte	0x5e
 1489 012a 00000000 		.4byte	0
 1490 012e 00000000 		.4byte	0
 1491              	.LLST7:
 1492 0132 00000000 		.4byte	.LVL26
 1493 0136 06000000 		.4byte	.LVL27
 1494 013a 0100     		.2byte	0x1
 1495 013c 50       		.byte	0x50
 1496 013d 06000000 		.4byte	.LVL27
 1497 0141 1C000000 		.4byte	.LFE64
 1498 0145 0400     		.2byte	0x4
 1499 0147 F3       		.byte	0xf3
 1500 0148 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 39


 1501 0149 50       		.byte	0x50
 1502 014a 9F       		.byte	0x9f
 1503 014b 00000000 		.4byte	0
 1504 014f 00000000 		.4byte	0
 1505              	.LLST8:
 1506 0153 00000000 		.4byte	.LVL28
 1507 0157 1A000000 		.4byte	.LVL29
 1508 015b 0200     		.2byte	0x2
 1509 015d 30       		.byte	0x30
 1510 015e 9F       		.byte	0x9f
 1511 015f 1A000000 		.4byte	.LVL29
 1512 0163 20000000 		.4byte	.LFE65
 1513 0167 0100     		.2byte	0x1
 1514 0169 50       		.byte	0x50
 1515 016a 00000000 		.4byte	0
 1516 016e 00000000 		.4byte	0
 1517              	.LLST9:
 1518 0172 00000000 		.4byte	.LVL30
 1519 0176 1A000000 		.4byte	.LVL31
 1520 017a 0200     		.2byte	0x2
 1521 017c 30       		.byte	0x30
 1522 017d 9F       		.byte	0x9f
 1523 017e 1A000000 		.4byte	.LVL31
 1524 0182 20000000 		.4byte	.LFE66
 1525 0186 0100     		.2byte	0x1
 1526 0188 50       		.byte	0x50
 1527 0189 00000000 		.4byte	0
 1528 018d 00000000 		.4byte	0
 1529              	.LLST10:
 1530 0191 00000000 		.4byte	.LVL32
 1531 0195 2C000000 		.4byte	.LVL34
 1532 0199 0100     		.2byte	0x1
 1533 019b 50       		.byte	0x50
 1534 019c 2C000000 		.4byte	.LVL34
 1535 01a0 6C000000 		.4byte	.LFE67
 1536 01a4 0400     		.2byte	0x4
 1537 01a6 F3       		.byte	0xf3
 1538 01a7 01       		.uleb128 0x1
 1539 01a8 50       		.byte	0x50
 1540 01a9 9F       		.byte	0x9f
 1541 01aa 00000000 		.4byte	0
 1542 01ae 00000000 		.4byte	0
 1543              	.LLST11:
 1544 01b2 28000000 		.4byte	.LVL33
 1545 01b6 5B000000 		.4byte	.LVL38-1
 1546 01ba 0100     		.2byte	0x1
 1547 01bc 5E       		.byte	0x5e
 1548 01bd 00000000 		.4byte	0
 1549 01c1 00000000 		.4byte	0
 1550              	.LLST12:
 1551 01c5 3E000000 		.4byte	.LVL35
 1552 01c9 42000000 		.4byte	.LVL36
 1553 01cd 0200     		.2byte	0x2
 1554 01cf 30       		.byte	0x30
 1555 01d0 9F       		.byte	0x9f
 1556 01d1 42000000 		.4byte	.LVL36
 1557 01d5 5B000000 		.4byte	.LVL38-1
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 40


 1558 01d9 0100     		.2byte	0x1
 1559 01db 53       		.byte	0x53
 1560 01dc 00000000 		.4byte	0
 1561 01e0 00000000 		.4byte	0
 1562              		.section	.debug_aranges,"",%progbits
 1563 0000 3C000000 		.4byte	0x3c
 1564 0004 0200     		.2byte	0x2
 1565 0006 00000000 		.4byte	.Ldebug_info0
 1566 000a 04       		.byte	0x4
 1567 000b 00       		.byte	0
 1568 000c 0000     		.2byte	0
 1569 000e 0000     		.2byte	0
 1570 0010 00000000 		.4byte	.LFB63
 1571 0014 DC000000 		.4byte	.LFE63-.LFB63
 1572 0018 00000000 		.4byte	.LFB64
 1573 001c 1C000000 		.4byte	.LFE64-.LFB64
 1574 0020 00000000 		.4byte	.LFB65
 1575 0024 20000000 		.4byte	.LFE65-.LFB65
 1576 0028 00000000 		.4byte	.LFB66
 1577 002c 20000000 		.4byte	.LFE66-.LFB66
 1578 0030 00000000 		.4byte	.LFB67
 1579 0034 6C000000 		.4byte	.LFE67-.LFB67
 1580 0038 00000000 		.4byte	0
 1581 003c 00000000 		.4byte	0
 1582              		.section	.debug_ranges,"",%progbits
 1583              	.Ldebug_ranges0:
 1584 0000 00000000 		.4byte	.LFB63
 1585 0004 DC000000 		.4byte	.LFE63
 1586 0008 00000000 		.4byte	.LFB64
 1587 000c 1C000000 		.4byte	.LFE64
 1588 0010 00000000 		.4byte	.LFB65
 1589 0014 20000000 		.4byte	.LFE65
 1590 0018 00000000 		.4byte	.LFB66
 1591 001c 20000000 		.4byte	.LFE66
 1592 0020 00000000 		.4byte	.LFB67
 1593 0024 6C000000 		.4byte	.LFE67
 1594 0028 00000000 		.4byte	0
 1595 002c 00000000 		.4byte	0
 1596              		.section	.debug_line,"",%progbits
 1597              	.Ldebug_line0:
 1598 0000 66020000 		.section	.debug_str,"MS",%progbits,1
 1598      02007001 
 1598      00000201 
 1598      FB0E0D00 
 1598      01010101 
 1599              	.LASF57:
 1600 0000 63616E5F 		.ascii	"can_receive\000"
 1600      72656365 
 1600      69766500 
 1601              	.LASF41:
 1602 000c 72657375 		.ascii	"result\000"
 1602      6C7400
 1603              	.LASF24:
 1604 0013 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1604      44415441 
 1604      5F425954 
 1604      455300
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 41


 1605              	.LASF2:
 1606 0022 73686F72 		.ascii	"short int\000"
 1606      7420696E 
 1606      7400
 1607              	.LASF49:
 1608 002c 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1608      52656365 
 1608      6976654D 
 1608      736700
 1609              	.LASF21:
 1610 003b 73697A65 		.ascii	"sizetype\000"
 1610      74797065 
 1610      00
 1611              	.LASF37:
 1612 0044 74786461 		.ascii	"txdata\000"
 1612      746100
 1613              	.LASF29:
 1614 004b 72786461 		.ascii	"rxdata\000"
 1614      746100
 1615              	.LASF48:
 1616 0052 43414E5F 		.ascii	"CAN_TxCancel\000"
 1616      54784361 
 1616      6E63656C 
 1616      00
 1617              	.LASF40:
 1618 005f 72657472 		.ascii	"retry\000"
 1618      7900
 1619              	.LASF11:
 1620 0065 75696E74 		.ascii	"uint8_t\000"
 1620      385F7400 
 1621              	.LASF13:
 1622 006d 75696E74 		.ascii	"uint8\000"
 1622      3800
 1623              	.LASF28:
 1624 0073 72786964 		.ascii	"rxid\000"
 1624      00
 1625              	.LASF31:
 1626 0078 72786163 		.ascii	"rxacr\000"
 1626      7200
 1627              	.LASF15:
 1628 007e 666C6F61 		.ascii	"float\000"
 1628      7400
 1629              	.LASF8:
 1630 0084 6C6F6E67 		.ascii	"long long int\000"
 1630      206C6F6E 
 1630      6720696E 
 1630      7400
 1631              	.LASF25:
 1632 0092 43414E5F 		.ascii	"CAN_REG_32\000"
 1632      5245475F 
 1632      333200
 1633              	.LASF35:
 1634 009d 7478636D 		.ascii	"txcmd\000"
 1634      6400
 1635              	.LASF6:
 1636 00a3 6C6F6E67 		.ascii	"long int\000"
 1636      20696E74 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 42


 1636      00
 1637              	.LASF39:
 1638 00ac 73686966 		.ascii	"shift\000"
 1638      7400
 1639              	.LASF7:
 1640 00b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1640      20756E73 
 1640      69676E65 
 1640      6420696E 
 1640      7400
 1641              	.LASF4:
 1642 00c4 5F5F7569 		.ascii	"__uint8_t\000"
 1642      6E74385F 
 1642      7400
 1643              	.LASF46:
 1644 00ce 43414E5F 		.ascii	"CAN_SendMsgDash_status\000"
 1644      53656E64 
 1644      4D736744 
 1644      6173685F 
 1644      73746174 
 1645              	.LASF51:
 1646 00e5 74657374 		.ascii	"test\000"
 1646      00
 1647              	.LASF23:
 1648 00ea 62797465 		.ascii	"byte\000"
 1648      00
 1649              	.LASF47:
 1650 00ef 43414E5F 		.ascii	"CAN_SendMsgDash_cmd\000"
 1650      53656E64 
 1650      4D736744 
 1650      6173685F 
 1650      636D6400 
 1651              	.LASF20:
 1652 0103 6C6F6E67 		.ascii	"long double\000"
 1652      20646F75 
 1652      626C6500 
 1653              	.LASF32:
 1654 010f 7278616D 		.ascii	"rxamrd\000"
 1654      726400
 1655              	.LASF1:
 1656 0116 756E7369 		.ascii	"unsigned char\000"
 1656      676E6564 
 1656      20636861 
 1656      7200
 1657              	.LASF0:
 1658 0124 7369676E 		.ascii	"signed char\000"
 1658      65642063 
 1658      68617200 
 1659              	.LASF9:
 1660 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 1660      206C6F6E 
 1660      6720756E 
 1660      7369676E 
 1660      65642069 
 1661              	.LASF55:
 1662 0147 5A3A5C44 		.ascii	"Z:\\Documents\\UCD\\FRUCD\\Dashboard-Firmware-FE9-F"
 1662      6F63756D 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 43


 1662      656E7473 
 1662      5C554344 
 1662      5C465255 
 1663 0176 45372D42 		.ascii	"E7-Board\\Dashboard.cydsn\000"
 1663      6F617264 
 1663      5C446173 
 1663      68626F61 
 1663      72642E63 
 1664              	.LASF10:
 1665 018f 756E7369 		.ascii	"unsigned int\000"
 1665      676E6564 
 1665      20696E74 
 1665      00
 1666              	.LASF22:
 1667 019c 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 1667      44415441 
 1667      5F425954 
 1667      45535F4D 
 1667      534700
 1668              	.LASF19:
 1669 01af 72656733 		.ascii	"reg32\000"
 1669      3200
 1670              	.LASF3:
 1671 01b5 73686F72 		.ascii	"short unsigned int\000"
 1671      7420756E 
 1671      7369676E 
 1671      65642069 
 1671      6E7400
 1672              	.LASF17:
 1673 01c8 63686172 		.ascii	"char\000"
 1673      00
 1674              	.LASF34:
 1675 01cd 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1675      52585F53 
 1675      54525543 
 1675      5400
 1676              	.LASF50:
 1677 01db 72784D61 		.ascii	"rxMailbox\000"
 1677      696C626F 
 1677      7800
 1678              	.LASF12:
 1679 01e5 696E7433 		.ascii	"int32_t\000"
 1679      325F7400 
 1680              	.LASF27:
 1681 01ed 7278636D 		.ascii	"rxcmd\000"
 1681      6400
 1682              	.LASF52:
 1683 01f3 64617461 		.ascii	"data\000"
 1683      00
 1684              	.LASF38:
 1685 01f8 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1685      54585F53 
 1685      54525543 
 1685      5400
 1686              	.LASF14:
 1687 0206 75696E74 		.ascii	"uint32\000"
 1687      333200
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 44


 1688              	.LASF18:
 1689 020d 72656738 		.ascii	"reg8\000"
 1689      00
 1690              	.LASF43:
 1691 0212 6D657373 		.ascii	"message\000"
 1691      61676500 
 1692              	.LASF26:
 1693 021a 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1693      54585F4D 
 1693      534700
 1694              	.LASF45:
 1695 0225 43414E5F 		.ascii	"CAN_SendMsg\000"
 1695      53656E64 
 1695      4D736700 
 1696              	.LASF44:
 1697 0231 62756666 		.ascii	"bufferId\000"
 1697      65724964 
 1697      00
 1698              	.LASF36:
 1699 023a 74786964 		.ascii	"txid\000"
 1699      00
 1700              	.LASF5:
 1701 023f 5F5F696E 		.ascii	"__int32_t\000"
 1701      7433325F 
 1701      7400
 1702              	.LASF54:
 1703 0249 47656E65 		.ascii	"Generated_Source\\PSoC5\\CAN_TX_RX_func.c\000"
 1703      72617465 
 1703      645F536F 
 1703      75726365 
 1703      5C50536F 
 1704              	.LASF33:
 1705 0271 72786163 		.ascii	"rxacrd\000"
 1705      726400
 1706              	.LASF16:
 1707 0278 646F7562 		.ascii	"double\000"
 1707      6C6500
 1708              	.LASF42:
 1709 027f 72656754 		.ascii	"regTemp\000"
 1709      656D7000 
 1710              	.LASF56:
 1711 0287 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1711      52784275 
 1711      66666572 
 1711      00
 1712              	.LASF53:
 1713 0294 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1713      43313120 
 1713      352E342E 
 1713      31203230 
 1713      31363036 
 1714 02c7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1714      20726576 
 1714      6973696F 
 1714      6E203233 
 1714      37373135 
 1715 02fa 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\cccGypfV.s 			page 45


 1715      66756E63 
 1715      74696F6E 
 1715      2D736563 
 1715      74696F6E 
 1716              	.LASF30:
 1717 0322 7278616D 		.ascii	"rxamr\000"
 1717      7200
 1718              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
