ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.thumb
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CAN_TX_RX_func.c"
   1:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "CAN.h"
  25:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  27:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  29:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#END` */
  30:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 2


  31:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  32:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
  33:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  34:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  35:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  36:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
  37:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  38:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  39:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  40:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  41:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
  42:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  43:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *           messages.
  44:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  45:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
  46:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Indication if message has been sent.
  47:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   Define                             Description
  48:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  49:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  50:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  51:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  53:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  54:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 i, j, shift;
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 retry = 0u;
  56:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  41              		.loc 1 56 0
  42 0002 0121     		movs	r1, #1
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  43              		.loc 1 55 0
  44 0004 0026     		movs	r6, #0
  57:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint32 regTemp;
  58:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  45              		.loc 1 59 0
  46 0006 5DE0     		b	.L2
  47              	.LVL2:
  48              	.L16:
  60:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
  61:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
  64:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 3


  49              		.loc 1 65 0
  50 0008 17F0030F 		tst	r7, #3
  51 000c 4DD1     		bne	.L3
  66:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
  67:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* Find free mailbox */
  68:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  69:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  52              		.loc 1 69 0
  53 000e 2F4B     		ldr	r3, .L22
  54 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  55 0012 3B42     		tst	r3, r7
  56 0014 49D1     		bne	.L3
  57              	.LVL3:
  70:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  71:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  72:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  73:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  74:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     {
  75:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         regTemp = 0u;
  76:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  77:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Set message parameters */
  78:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  58              		.loc 1 78 0
  59 0016 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  60 0018 0BB1     		cbz	r3, .L4
  79:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  80:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  61              		.loc 1 80 0
  62 001a 4FF40013 		mov	r3, #2097152
  63              	.L4:
  64              	.LVL4:
  81:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  82:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  83:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  65              		.loc 1 83 0
  66 001e 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  67              	.LVL5:
  68 0020 31B9     		cbnz	r1, .L5
  84:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  85:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  69              		.loc 1 85 0
  70 0022 2B49     		ldr	r1, .L22+4
  71 0024 01EB0211 		add	r1, r1, r2, lsl #4
  72 0028 0468     		ldr	r4, [r0]
  73 002a 6405     		lsls	r4, r4, #21
  74 002c 4C60     		str	r4, [r1, #4]
  75 002e 07E0     		b	.L6
  76              	.L5:
  86:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  87:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  88:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  89:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  77              		.loc 1 89 0
  78 0030 43F48013 		orr	r3, r3, #1048576
  79              	.LVL6:
  90:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
  80              		.loc 1 90 0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 4


  81 0034 2649     		ldr	r1, .L22+4
  82 0036 01EB0211 		add	r1, r1, r2, lsl #4
  83 003a 0468     		ldr	r4, [r0]
  84 003c E400     		lsls	r4, r4, #3
  85 003e 4C60     		str	r4, [r1, #4]
  86              	.L6:
  91:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  92:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  93:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
  87              		.loc 1 93 0
  88 0040 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  89 0044 BEF1070F 		cmp	lr, #7
  90 0048 02D8     		bhi	.L7
  94:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  95:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
  91              		.loc 1 95 0
  92 004a 43EA0E4E 		orr	lr, r3, lr, lsl #16
  93              	.LVL7:
  94 004e 01E0     		b	.L8
  95              	.LVL8:
  96              	.L7:
  96:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  97:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  98:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  99:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
  97              		.loc 1 99 0
  98 0050 43F4002E 		orr	lr, r3, #524288
  99              	.LVL9:
 100              	.L8:
 100:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 101:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 102:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 101              		.loc 1 102 0
 102 0054 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 103 0056 0BB1     		cbz	r3, .L9
 103:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 104:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 104              		.loc 1 104 0
 105 0058 4EF0040E 		orr	lr, lr, #4
 106              	.LVL10:
 107              	.L9:
 105:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 106:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 108              		.loc 1 107 0
 109 005c 0023     		movs	r3, #0
 110 005e 0FE0     		b	.L10
 111              	.LVL11:
 112              	.L14:
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 109:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 113              		.loc 1 110 0
 114 0060 1B49     		ldr	r1, .L22+4
 115 0062 01EB0214 		add	r4, r1, r2, lsl #4
 116 0066 032B     		cmp	r3, #3
 117 0068 02D9     		bls	.L11
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 5


 118              		.loc 1 110 0 is_stmt 0 discriminator 1
 119 006a C3F10B01 		rsb	r1, r3, #11
 120 006e 01E0     		b	.L12
 121              	.L11:
 122              		.loc 1 110 0 discriminator 2
 123 0070 C3F10301 		rsb	r1, r3, #3
 124              	.L12:
 125              		.loc 1 110 0 discriminator 4
 126 0074 8568     		ldr	r5, [r0, #8]
 127 0076 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 128 0078 2144     		add	r1, r1, r4
 129 007a 0D72     		strb	r5, [r1, #8]
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 130              		.loc 1 107 0 is_stmt 1 discriminator 4
 131 007c 0133     		adds	r3, r3, #1
 132              	.LVL12:
 133 007e DBB2     		uxtb	r3, r3
 134              	.LVL13:
 135              	.L10:
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 136              		.loc 1 107 0 is_stmt 0 discriminator 2
 137 0080 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 138 0082 8B42     		cmp	r3, r1
 139 0084 01D2     		bcs	.L13
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 140              		.loc 1 107 0 discriminator 3
 141 0086 072B     		cmp	r3, #7
 142 0088 EAD9     		bls	.L14
 143              	.L13:
 111:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 112:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 113:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 114:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 115:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 116:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Disable isr */
 117:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 144              		.loc 1 117 0 is_stmt 1
 145 008a 4FF48034 		mov	r4, #65536
 146 008e 114B     		ldr	r3, .L22+8
 147              	.LVL14:
 148 0090 1C60     		str	r4, [r3]
 118:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 119:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 120:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 149              		.loc 1 120 0
 150 0092 1101     		lsls	r1, r2, #4
 151 0094 0E4D     		ldr	r5, .L22+4
 152 0096 4EF40003 		orr	r3, lr, #8388608
 153 009a 43F00803 		orr	r3, r3, #8
 154 009e 4B51     		str	r3, [r1, r5]
 121:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 122:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 123:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 155              		.loc 1 123 0
 156 00a0 0123     		movs	r3, #1
 157 00a2 4B51     		str	r3, [r1, r5]
 124:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 6


 125:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 126:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 127:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 128:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 129:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 130:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 131:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             else
 132:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 133:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 134:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 135:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 136:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 137:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Enable isr */
 138:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 158              		.loc 1 138 0
 159 00a4 0C4B     		ldr	r3, .L22+12
 160 00a6 1C60     		str	r4, [r3]
 161              	.LVL15:
 139:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 140:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 162              		.loc 1 140 0
 163 00a8 0021     		movs	r1, #0
 164              	.LVL16:
 165              	.L3:
 141:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     }
 142:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 143:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             shift <<= 1u;
 166              		.loc 1 143 0
 167 00aa 7B00     		lsls	r3, r7, #1
 168 00ac DFB2     		uxtb	r7, r3
 169              	.LVL17:
 144:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 170              		.loc 1 144 0
 171 00ae 31B1     		cbz	r1, .L15
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 172              		.loc 1 62 0 discriminator 2
 173 00b0 0132     		adds	r2, r2, #1
 174              	.LVL18:
 175 00b2 D2B2     		uxtb	r2, r2
 176              	.LVL19:
 177 00b4 01E0     		b	.L18
 178              	.LVL20:
 179              	.L20:
 180 00b6 0127     		movs	r7, #1
 181 00b8 0022     		movs	r2, #0
 182              	.L18:
 183              	.LVL21:
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 184              		.loc 1 62 0 is_stmt 0 discriminator 1
 185 00ba 072A     		cmp	r2, #7
 186 00bc A4D9     		bls	.L16
 187              	.L15:
 145:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 146:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 break;
 147:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 148:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 149:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 7


 188              		.loc 1 149 0 is_stmt 1
 189 00be 19B1     		cbz	r1, .L17
 150:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 151:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             break;
 152:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 153:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         else
 154:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 155:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             retry++;
 190              		.loc 1 155 0
 191 00c0 0136     		adds	r6, r6, #1
 192              	.LVL22:
 193 00c2 F6B2     		uxtb	r6, r6
 194              	.LVL23:
 195              	.L2:
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 196              		.loc 1 59 0
 197 00c4 022E     		cmp	r6, #2
 198 00c6 F6D9     		bls	.L20
 199              	.L17:
 156:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 157:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 158:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 159:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     return (result);
 160:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 200              		.loc 1 160 0
 201 00c8 0846     		mov	r0, r1
 202              	.LVL24:
 203 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 204              	.LVL25:
 205              	.L23:
 206              		.align	2
 207              	.L22:
 208 00cc 08A00040 		.word	1073782792
 209 00d0 20A00040 		.word	1073782816
 210 00d4 80E100E0 		.word	-536813184
 211 00d8 00E100E0 		.word	-536813312
 212              		.cfi_endproc
 213              	.LFE0:
 214              		.size	CAN_SendMsg, .-CAN_SendMsg
 215              		.section	.text.CAN_TxCancel,"ax",%progbits
 216              		.align	2
 217              		.global	CAN_TxCancel
 218              		.thumb
 219              		.thumb_func
 220              		.type	CAN_TxCancel, %function
 221              	CAN_TxCancel:
 222              	.LFB1:
 161:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 162:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 163:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 165:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 166:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 167:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 168:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 169:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 170:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 8


 171:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 172:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 173:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 174:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 175:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 176:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 177:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 179:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 223              		.loc 1 179 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL26:
 180:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 229              		.loc 1 180 0
 230 0000 0728     		cmp	r0, #7
 231 0002 07D8     		bhi	.L24
 181:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 182:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 232              		.loc 1 182 0
 233 0004 0001     		lsls	r0, r0, #4
 234              	.LVL27:
 235 0006 044A     		ldr	r2, .L26
 236 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 237 000a 03F0FC03 		and	r3, r3, #252
 238 000e 43F00203 		orr	r3, r3, #2
 239 0012 8354     		strb	r3, [r0, r2]
 240              	.L24:
 241 0014 7047     		bx	lr
 242              	.L27:
 243 0016 00BF     		.align	2
 244              	.L26:
 245 0018 20A00040 		.word	1073782816
 246              		.cfi_endproc
 247              	.LFE1:
 248              		.size	CAN_TxCancel, .-CAN_TxCancel
 249              		.section	.text.CAN_SendMsgDash_status,"ax",%progbits
 250              		.align	2
 251              		.global	CAN_SendMsgDash_status
 252              		.thumb
 253              		.thumb_func
 254              		.type	CAN_SendMsgDash_status, %function
 255              	CAN_SendMsgDash_status:
 256              	.LFB2:
 183:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 184:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 185:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 186:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 187:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 188:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 189:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgDash_status
 190:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 191:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 192:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 193:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 9


 194:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 195:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 196:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 197:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 198:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 199:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 200:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 201:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 202:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 203:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 204:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 205:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 206:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 207:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 208:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgDash_status(void) 
 209:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 257              		.loc 1 209 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LVL28:
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 211:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 212:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 213:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 263              		.loc 1 213 0
 264 0000 064B     		ldr	r3, .L31
 265 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 0004 13F0010F 		tst	r3, #1
 267 0008 06D1     		bne	.L30
 214:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 215:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 216:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 217:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 219:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 220:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 221:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 222:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_Dash_status_TRASMITTED` */
 223:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 224:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 225:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 226:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_Dash_status_CALLBACK
 227:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_Dash_status_Callback();
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_Dash_status_CALLBACK */
 229:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 230:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 268              		.loc 1 230 0
 269 000a 044A     		ldr	r2, .L31
 270 000c 1368     		ldr	r3, [r2]
 271 000e 43F00103 		orr	r3, r3, #1
 272 0012 1360     		str	r3, [r2]
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 273              		.loc 1 210 0
 274 0014 0020     		movs	r0, #0
 275 0016 7047     		bx	lr
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 10


 276              	.L30:
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 277              		.loc 1 218 0
 278 0018 0120     		movs	r0, #1
 279              	.LVL29:
 231:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 232:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 233:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 234:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 235:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 280              		.loc 1 235 0
 281 001a 7047     		bx	lr
 282              	.L32:
 283              		.align	2
 284              	.L31:
 285 001c 20A00040 		.word	1073782816
 286              		.cfi_endproc
 287              	.LFE2:
 288              		.size	CAN_SendMsgDash_status, .-CAN_SendMsgDash_status
 289              		.section	.text.CAN_SendMsgDash_cmd,"ax",%progbits
 290              		.align	2
 291              		.global	CAN_SendMsgDash_cmd
 292              		.thumb
 293              		.thumb_func
 294              		.type	CAN_SendMsgDash_cmd, %function
 295              	CAN_SendMsgDash_cmd:
 296              	.LFB3:
 236:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 237:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 238:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 239:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 240:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 241:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgDash_cmd
 242:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 243:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 244:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 245:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 246:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 247:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 248:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 249:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 250:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 251:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 252:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 253:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 254:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 255:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 256:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 257:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 258:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 259:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 260:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgDash_cmd(void) 
 261:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 297              		.loc 1 261 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 11


 301              		@ link register save eliminated.
 302              	.LVL30:
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 263:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 264:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 265:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 303              		.loc 1 265 0
 304 0000 064B     		ldr	r3, .L36
 305 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0004 13F0010F 		tst	r3, #1
 307 0008 06D1     		bne	.L35
 266:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 267:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 268:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 269:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 271:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 272:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 273:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 274:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_Dash_cmd_TRASMITTED` */
 275:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 276:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 277:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 278:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_Dash_cmd_CALLBACK
 279:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_Dash_cmd_Callback();
 280:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_Dash_cmd_CALLBACK */
 281:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 282:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 308              		.loc 1 282 0
 309 000a 044A     		ldr	r2, .L36
 310 000c 1368     		ldr	r3, [r2]
 311 000e 43F00103 		orr	r3, r3, #1
 312 0012 1360     		str	r3, [r2]
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 313              		.loc 1 262 0
 314 0014 0020     		movs	r0, #0
 315 0016 7047     		bx	lr
 316              	.L35:
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 317              		.loc 1 270 0
 318 0018 0120     		movs	r0, #1
 319              	.LVL31:
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 284:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 285:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 286:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 287:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 320              		.loc 1 287 0
 321 001a 7047     		bx	lr
 322              	.L37:
 323              		.align	2
 324              	.L36:
 325 001c 30A00040 		.word	1073782832
 326              		.cfi_endproc
 327              	.LFE3:
 328              		.size	CAN_SendMsgDash_cmd, .-CAN_SendMsgDash_cmd
 329              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 12


 330              		.align	2
 331              		.global	CAN_ReceiveMsg
 332              		.thumb
 333              		.thumb_func
 334              		.type	CAN_ReceiveMsg, %function
 335              	CAN_ReceiveMsg:
 336              	.LFB4:
 288:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 289:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 290:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 291:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 292:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 293:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 294:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 295:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 296:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 297:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 298:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 299:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 300:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 301:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 302:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 303:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 304:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 305:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 306:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 307:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 308:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 309:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 310:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 311:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 312:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 313:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 314:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 315:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 316:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 317:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 318:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 319:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 320:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 321:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 322:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 323:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 324:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 325:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 326:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 327:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 328:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 329:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 330:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 331:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 332:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 333:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 334:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 335:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 336:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 337:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 13


 338:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 339:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 340:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 341:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 342:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 343:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 344:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 345:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 346:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 347:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 348:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 349:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 350:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 351:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 352:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 353:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 354:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 355:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 356:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 357:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 358:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 359:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 360:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 361:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 362:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 363:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 365:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 366:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 367:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 368:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 369:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 370:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 371:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 372:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 373:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 374:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 375:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 376:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 377:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 378:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 379:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 380:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 381:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 382:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 383:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 384:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 385:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 386:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 387:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 388:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 389:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 390:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 391:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 392:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 393:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 394:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 14


 395:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 396:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 397:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 398:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 399:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 400:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 401:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 402:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 403:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 404:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 405:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 406:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 407:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 408:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 409:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 410:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 411:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 412:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 413:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 414:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 415:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 416:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 417:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 418:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 419:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 420:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 421:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 422:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 423:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 424:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 425:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 426:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 427:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 428:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 429:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 430:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 431:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 432:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 433:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 434:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 435:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 436:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 437:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 438:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 439:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 440:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 441:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 442:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 443:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 444:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 445:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 446:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 447:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 448:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 449:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 450:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 451:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 15


 452:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 453:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 454:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 455:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 456:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 457:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 458:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 459:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 460:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 461:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 462:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 463:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 464:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 465:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 466:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 467:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 468:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 469:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 470:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 471:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 472:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 473:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 474:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 475:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 476:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 477:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 478:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 479:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 480:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 481:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 482:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 483:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 484:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 485:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 486:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 487:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 488:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 489:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 490:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 491:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 492:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 493:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 494:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 495:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 496:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 497:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 498:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 499:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 500:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 501:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 502:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 503:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 504:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 505:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 506:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 507:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 508:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 16


 509:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 510:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 511:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 512:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 513:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 514:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 515:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 516:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 517:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 518:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 519:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 520:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 521:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 522:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 523:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 524:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 525:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 526:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 527:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 528:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 529:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 530:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 531:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 532:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 533:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 534:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 535:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 536:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 537:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 538:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 539:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 540:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 541:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 542:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 543:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 544:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 545:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 546:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 547:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 548:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 549:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 550:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 551:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 552:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 553:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 554:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 555:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 556:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 557:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 558:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 559:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 560:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 561:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 562:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 563:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 564:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 565:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 17


 566:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 567:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 568:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 569:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 570:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 571:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 572:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 573:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 574:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 575:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 576:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 577:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 578:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 579:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 580:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 581:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 582:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 583:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 584:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 585:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 586:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 587:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 588:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 589:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 590:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 591:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 592:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 593:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 594:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 595:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 596:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 597:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 598:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 599:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 600:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 601:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 602:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 603:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 604:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 605:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 606:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 607:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 608:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 609:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 610:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 611:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 612:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 613:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 614:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 615:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 616:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 617:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 618:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Reentrant:
 619:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Depends on the Customer code.
 620:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 621:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 622:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 18


 623:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 337              		.loc 1 623 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 40
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL32:
 342 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 343              		.cfi_def_cfa_offset 20
 344              		.cfi_offset 4, -20
 345              		.cfi_offset 5, -16
 346              		.cfi_offset 6, -12
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 8BB0     		sub	sp, sp, #44
 350              		.cfi_def_cfa_offset 64
 624:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 625:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 351              		.loc 1 625 0
 352 0004 4701     		lsls	r7, r0, #5
 353 0006 184E     		ldr	r6, .L45
 354 0008 BC19     		adds	r4, r7, r6
 355 000a BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 356 000c 13F0010F 		tst	r3, #1
 357 0010 28D0     		beq	.L38
 358              	.LBB2:
 626:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 627:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 628:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 629:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 630:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 631:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 632:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             int ID = CAN_GET_RX_ID(rxMailbox);
 359              		.loc 1 632 0
 360 0012 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 361 0014 13F0100F 		tst	r3, #16
 362 0018 03D0     		beq	.L40
 363              		.loc 1 632 0 is_stmt 0 discriminator 1
 364 001a 6368     		ldr	r3, [r4, #4]
 365 001c 4FEAD30E 		lsr	lr, r3, #3
 366 0020 02E0     		b	.L41
 367              	.L40:
 368              		.loc 1 632 0 discriminator 2
 369 0022 6368     		ldr	r3, [r4, #4]
 370 0024 4FEA535E 		lsr	lr, r3, #21
 371              	.L41:
 372              	.LVL33:
 633:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             CAN_RX_STRUCT test = CAN_RX[rxMailbox]; // is test always 0s?
 373              		.loc 1 633 0 is_stmt 1 discriminator 4
 374 0028 02AD     		add	r5, sp, #8
 375 002a 2068     		ldr	r0, [r4]	@ unaligned
 376              	.LVL34:
 377 002c 6168     		ldr	r1, [r4, #4]	@ unaligned
 378 002e A268     		ldr	r2, [r4, #8]	@ unaligned
 379 0030 E368     		ldr	r3, [r4, #12]	@ unaligned
 380 0032 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 381 0034 2069     		ldr	r0, [r4, #16]	@ unaligned
 382 0036 6169     		ldr	r1, [r4, #20]	@ unaligned
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 19


 383 0038 A269     		ldr	r2, [r4, #24]	@ unaligned
 384 003a E369     		ldr	r3, [r4, #28]	@ unaligned
 385 003c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 386              	.LVL35:
 634:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             uint8_t data[8];
 635:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             int i = 0;
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             for (i = 0; i < 8; i++)
 387              		.loc 1 636 0 discriminator 4
 388 003e 0023     		movs	r3, #0
 389 0040 06E0     		b	.L42
 390              	.LVL36:
 391              	.L43:
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 392              		.loc 1 637 0 discriminator 3
 393 0042 E218     		adds	r2, r4, r3
 394 0044 117A     		ldrb	r1, [r2, #8]	@ zero_extendqisi2
 395 0046 0AAA     		add	r2, sp, #40
 396 0048 1A44     		add	r2, r2, r3
 397 004a 02F8281C 		strb	r1, [r2, #-40]
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 398              		.loc 1 636 0 discriminator 3
 399 004e 0133     		adds	r3, r3, #1
 400              	.LVL37:
 401              	.L42:
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 402              		.loc 1 636 0 is_stmt 0 discriminator 1
 403 0050 072B     		cmp	r3, #7
 404 0052 F6DD     		ble	.L43
 638:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 639:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             can_receive(data, ID);
 405              		.loc 1 639 0 is_stmt 1
 406 0054 7146     		mov	r1, lr
 407 0056 6846     		mov	r0, sp
 408 0058 FFF7FEFF 		bl	can_receive
 409              	.LVL38:
 640:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#END` */
 641:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 642:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 643:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 644:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 645:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 647:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 410              		.loc 1 647 0
 411 005c BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 412 005e 43F00103 		orr	r3, r3, #1
 413 0062 BB55     		strb	r3, [r7, r6]
 414              	.L38:
 415              	.LBE2:
 648:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 649:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 650:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 651:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 652:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 416              		.loc 1 652 0
 417 0064 0BB0     		add	sp, sp, #44
 418              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 20


 419              		@ sp needed
 420 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 421              	.L46:
 422              		.align	2
 423              	.L45:
 424 0068 A0A00040 		.word	1073782944
 425              		.cfi_endproc
 426              	.LFE4:
 427              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 428              		.text
 429              	.Letext0:
 430              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 431              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 432              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 433              		.file 5 "Generated_Source\\PSoC5\\CAN.h"
 434              		.section	.debug_info,"",%progbits
 435              	.Ldebug_info0:
 436 0000 23040000 		.4byte	0x423
 437 0004 0400     		.2byte	0x4
 438 0006 00000000 		.4byte	.Ldebug_abbrev0
 439 000a 04       		.byte	0x4
 440 000b 01       		.uleb128 0x1
 441 000c 15020000 		.4byte	.LASF51
 442 0010 0C       		.byte	0xc
 443 0011 9B010000 		.4byte	.LASF52
 444 0015 87000000 		.4byte	.LASF53
 445 0019 00000000 		.4byte	.Ldebug_ranges0+0
 446 001d 00000000 		.4byte	0
 447 0021 00000000 		.4byte	.Ldebug_line0
 448 0025 02       		.uleb128 0x2
 449 0026 01       		.byte	0x1
 450 0027 06       		.byte	0x6
 451 0028 58000000 		.4byte	.LASF0
 452 002c 03       		.uleb128 0x3
 453 002d 00000000 		.4byte	.LASF9
 454 0031 02       		.byte	0x2
 455 0032 1D       		.byte	0x1d
 456 0033 37000000 		.4byte	0x37
 457 0037 02       		.uleb128 0x2
 458 0038 01       		.byte	0x1
 459 0039 08       		.byte	0x8
 460 003a DC010000 		.4byte	.LASF1
 461 003e 02       		.uleb128 0x2
 462 003f 02       		.byte	0x2
 463 0040 05       		.byte	0x5
 464 0041 EA010000 		.4byte	.LASF2
 465 0045 02       		.uleb128 0x2
 466 0046 02       		.byte	0x2
 467 0047 07       		.byte	0x7
 468 0048 43010000 		.4byte	.LASF3
 469 004c 02       		.uleb128 0x2
 470 004d 04       		.byte	0x4
 471 004e 05       		.byte	0x5
 472 004f 64000000 		.4byte	.LASF4
 473 0053 02       		.uleb128 0x2
 474 0054 04       		.byte	0x4
 475 0055 07       		.byte	0x7
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 21


 476 0056 FB000000 		.4byte	.LASF5
 477 005a 02       		.uleb128 0x2
 478 005b 08       		.byte	0x8
 479 005c 05       		.byte	0x5
 480 005d 4A000000 		.4byte	.LASF6
 481 0061 02       		.uleb128 0x2
 482 0062 08       		.byte	0x8
 483 0063 07       		.byte	0x7
 484 0064 21000000 		.4byte	.LASF7
 485 0068 04       		.uleb128 0x4
 486 0069 04       		.byte	0x4
 487 006a 05       		.byte	0x5
 488 006b 696E7400 		.ascii	"int\000"
 489 006f 02       		.uleb128 0x2
 490 0070 04       		.byte	0x4
 491 0071 07       		.byte	0x7
 492 0072 EE000000 		.4byte	.LASF8
 493 0076 03       		.uleb128 0x3
 494 0077 DE020000 		.4byte	.LASF10
 495 007b 03       		.byte	0x3
 496 007c 18       		.byte	0x18
 497 007d 2C000000 		.4byte	0x2c
 498 0081 05       		.uleb128 0x5
 499 0082 74000000 		.4byte	.LASF11
 500 0086 04       		.byte	0x4
 501 0087 3801     		.2byte	0x138
 502 0089 37000000 		.4byte	0x37
 503 008d 05       		.uleb128 0x5
 504 008e D5000000 		.4byte	.LASF12
 505 0092 04       		.byte	0x4
 506 0093 3A01     		.2byte	0x13a
 507 0095 53000000 		.4byte	0x53
 508 0099 02       		.uleb128 0x2
 509 009a 04       		.byte	0x4
 510 009b 04       		.byte	0x4
 511 009c D1010000 		.4byte	.LASF13
 512 00a0 02       		.uleb128 0x2
 513 00a1 08       		.byte	0x8
 514 00a2 04       		.byte	0x4
 515 00a3 80000000 		.4byte	.LASF14
 516 00a7 02       		.uleb128 0x2
 517 00a8 01       		.byte	0x1
 518 00a9 08       		.byte	0x8
 519 00aa A3020000 		.4byte	.LASF15
 520 00ae 05       		.uleb128 0x5
 521 00af D7010000 		.4byte	.LASF16
 522 00b3 04       		.byte	0x4
 523 00b4 E201     		.2byte	0x1e2
 524 00b6 BA000000 		.4byte	0xba
 525 00ba 06       		.uleb128 0x6
 526 00bb 81000000 		.4byte	0x81
 527 00bf 05       		.uleb128 0x5
 528 00c0 75010000 		.4byte	.LASF17
 529 00c4 04       		.byte	0x4
 530 00c5 E401     		.2byte	0x1e4
 531 00c7 CB000000 		.4byte	0xcb
 532 00cb 06       		.uleb128 0x6
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 22


 533 00cc 8D000000 		.4byte	0x8d
 534 00d0 02       		.uleb128 0x2
 535 00d1 08       		.byte	0x8
 536 00d2 04       		.byte	0x4
 537 00d3 8F010000 		.4byte	.LASF18
 538 00d7 02       		.uleb128 0x2
 539 00d8 04       		.byte	0x4
 540 00d9 07       		.byte	0x7
 541 00da 86010000 		.4byte	.LASF19
 542 00de 07       		.uleb128 0x7
 543 00df 08       		.byte	0x8
 544 00e0 05       		.byte	0x5
 545 00e1 6F       		.byte	0x6f
 546 00e2 F3000000 		.4byte	0xf3
 547 00e6 08       		.uleb128 0x8
 548 00e7 E9000000 		.4byte	.LASF21
 549 00eb 05       		.byte	0x5
 550 00ec 71       		.byte	0x71
 551 00ed F3000000 		.4byte	0xf3
 552 00f1 00       		.byte	0
 553 00f2 00       		.byte	0
 554 00f3 09       		.uleb128 0x9
 555 00f4 81000000 		.4byte	0x81
 556 00f8 03010000 		.4byte	0x103
 557 00fc 0A       		.uleb128 0xa
 558 00fd D7000000 		.4byte	0xd7
 559 0101 07       		.byte	0x7
 560 0102 00       		.byte	0
 561 0103 03       		.uleb128 0x3
 562 0104 F4010000 		.4byte	.LASF20
 563 0108 05       		.byte	0x5
 564 0109 72       		.byte	0x72
 565 010a DE000000 		.4byte	0xde
 566 010e 07       		.uleb128 0x7
 567 010f 08       		.byte	0x8
 568 0110 05       		.byte	0x5
 569 0111 75       		.byte	0x75
 570 0112 23010000 		.4byte	0x123
 571 0116 08       		.uleb128 0x8
 572 0117 E9000000 		.4byte	.LASF21
 573 011b 05       		.byte	0x5
 574 011c 77       		.byte	0x77
 575 011d 33010000 		.4byte	0x133
 576 0121 00       		.byte	0
 577 0122 00       		.byte	0
 578 0123 09       		.uleb128 0x9
 579 0124 AE000000 		.4byte	0xae
 580 0128 33010000 		.4byte	0x133
 581 012c 0A       		.uleb128 0xa
 582 012d D7000000 		.4byte	0xd7
 583 0131 07       		.byte	0x7
 584 0132 00       		.byte	0
 585 0133 06       		.uleb128 0x6
 586 0134 23010000 		.4byte	0x123
 587 0138 03       		.uleb128 0x3
 588 0139 AD020000 		.4byte	.LASF22
 589 013d 05       		.byte	0x5
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 23


 590 013e 78       		.byte	0x78
 591 013f 0E010000 		.4byte	0x10e
 592 0143 07       		.uleb128 0x7
 593 0144 04       		.byte	0x4
 594 0145 05       		.byte	0x5
 595 0146 7B       		.byte	0x7b
 596 0147 58010000 		.4byte	0x158
 597 014b 08       		.uleb128 0x8
 598 014c E9000000 		.4byte	.LASF21
 599 0150 05       		.byte	0x5
 600 0151 7D       		.byte	0x7d
 601 0152 68010000 		.4byte	0x168
 602 0156 00       		.byte	0
 603 0157 00       		.byte	0
 604 0158 09       		.uleb128 0x9
 605 0159 AE000000 		.4byte	0xae
 606 015d 68010000 		.4byte	0x168
 607 0161 0A       		.uleb128 0xa
 608 0162 D7000000 		.4byte	0xd7
 609 0166 03       		.byte	0x3
 610 0167 00       		.byte	0
 611 0168 06       		.uleb128 0x6
 612 0169 58010000 		.4byte	0x158
 613 016d 03       		.uleb128 0x3
 614 016e 7B010000 		.4byte	.LASF23
 615 0172 05       		.byte	0x5
 616 0173 7E       		.byte	0x7e
 617 0174 43010000 		.4byte	0x143
 618 0178 07       		.uleb128 0x7
 619 0179 0C       		.byte	0xc
 620 017a 05       		.byte	0x5
 621 017b 81       		.byte	0x81
 622 017c C8010000 		.4byte	0x1c8
 623 0180 0B       		.uleb128 0xb
 624 0181 696400   		.ascii	"id\000"
 625 0184 05       		.byte	0x5
 626 0185 83       		.byte	0x83
 627 0186 8D000000 		.4byte	0x8d
 628 018a 00       		.byte	0
 629 018b 0B       		.uleb128 0xb
 630 018c 72747200 		.ascii	"rtr\000"
 631 0190 05       		.byte	0x5
 632 0191 84       		.byte	0x84
 633 0192 81000000 		.4byte	0x81
 634 0196 04       		.byte	0x4
 635 0197 0B       		.uleb128 0xb
 636 0198 69646500 		.ascii	"ide\000"
 637 019c 05       		.byte	0x5
 638 019d 85       		.byte	0x85
 639 019e 81000000 		.4byte	0x81
 640 01a2 05       		.byte	0x5
 641 01a3 0B       		.uleb128 0xb
 642 01a4 646C6300 		.ascii	"dlc\000"
 643 01a8 05       		.byte	0x5
 644 01a9 86       		.byte	0x86
 645 01aa 81000000 		.4byte	0x81
 646 01ae 06       		.byte	0x6
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 24


 647 01af 0B       		.uleb128 0xb
 648 01b0 69727100 		.ascii	"irq\000"
 649 01b4 05       		.byte	0x5
 650 01b5 87       		.byte	0x87
 651 01b6 81000000 		.4byte	0x81
 652 01ba 07       		.byte	0x7
 653 01bb 0B       		.uleb128 0xb
 654 01bc 6D736700 		.ascii	"msg\000"
 655 01c0 05       		.byte	0x5
 656 01c1 8B       		.byte	0x8b
 657 01c2 C8010000 		.4byte	0x1c8
 658 01c6 08       		.byte	0x8
 659 01c7 00       		.byte	0
 660 01c8 0C       		.uleb128 0xc
 661 01c9 04       		.byte	0x4
 662 01ca 03010000 		.4byte	0x103
 663 01ce 03       		.uleb128 0x3
 664 01cf C2020000 		.4byte	.LASF24
 665 01d3 05       		.byte	0x5
 666 01d4 8C       		.byte	0x8c
 667 01d5 78010000 		.4byte	0x178
 668 01d9 07       		.uleb128 0x7
 669 01da 20       		.byte	0x20
 670 01db 05       		.byte	0x5
 671 01dc A0       		.byte	0xa0
 672 01dd 36020000 		.4byte	0x236
 673 01e1 08       		.uleb128 0x8
 674 01e2 BC020000 		.4byte	.LASF25
 675 01e6 05       		.byte	0x5
 676 01e7 A2       		.byte	0xa2
 677 01e8 6D010000 		.4byte	0x16d
 678 01ec 00       		.byte	0
 679 01ed 08       		.uleb128 0x8
 680 01ee A8020000 		.4byte	.LASF26
 681 01f2 05       		.byte	0x5
 682 01f3 A3       		.byte	0xa3
 683 01f4 6D010000 		.4byte	0x16d
 684 01f8 04       		.byte	0x4
 685 01f9 08       		.uleb128 0x8
 686 01fa 6D000000 		.4byte	.LASF27
 687 01fe 05       		.byte	0x5
 688 01ff A4       		.byte	0xa4
 689 0200 38010000 		.4byte	0x138
 690 0204 08       		.byte	0x8
 691 0205 08       		.uleb128 0x8
 692 0206 7A000000 		.4byte	.LASF28
 693 020a 05       		.byte	0x5
 694 020b A5       		.byte	0xa5
 695 020c 6D010000 		.4byte	0x16d
 696 0210 10       		.byte	0x10
 697 0211 08       		.uleb128 0x8
 698 0212 E6020000 		.4byte	.LASF29
 699 0216 05       		.byte	0x5
 700 0217 A6       		.byte	0xa6
 701 0218 6D010000 		.4byte	0x16d
 702 021c 14       		.byte	0x14
 703 021d 08       		.uleb128 0x8
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 25


 704 021e 43000000 		.4byte	.LASF30
 705 0222 05       		.byte	0x5
 706 0223 A7       		.byte	0xa7
 707 0224 6D010000 		.4byte	0x16d
 708 0228 18       		.byte	0x18
 709 0229 08       		.uleb128 0x8
 710 022a EC020000 		.4byte	.LASF31
 711 022e 05       		.byte	0x5
 712 022f A8       		.byte	0xa8
 713 0230 6D010000 		.4byte	0x16d
 714 0234 1C       		.byte	0x1c
 715 0235 00       		.byte	0
 716 0236 03       		.uleb128 0x3
 717 0237 56010000 		.4byte	.LASF32
 718 023b 05       		.byte	0x5
 719 023c A9       		.byte	0xa9
 720 023d D9010000 		.4byte	0x1d9
 721 0241 07       		.uleb128 0x7
 722 0242 10       		.byte	0x10
 723 0243 05       		.byte	0x5
 724 0244 AC       		.byte	0xac
 725 0245 6E020000 		.4byte	0x26e
 726 0249 08       		.uleb128 0x8
 727 024a 38000000 		.4byte	.LASF33
 728 024e 05       		.byte	0x5
 729 024f AE       		.byte	0xae
 730 0250 6D010000 		.4byte	0x16d
 731 0254 00       		.byte	0
 732 0255 08       		.uleb128 0x8
 733 0256 CD020000 		.4byte	.LASF34
 734 025a 05       		.byte	0x5
 735 025b AF       		.byte	0xaf
 736 025c 6D010000 		.4byte	0x16d
 737 0260 04       		.byte	0x4
 738 0261 08       		.uleb128 0x8
 739 0262 6E010000 		.4byte	.LASF35
 740 0266 05       		.byte	0x5
 741 0267 B0       		.byte	0xb0
 742 0268 38010000 		.4byte	0x138
 743 026c 08       		.byte	0x8
 744 026d 00       		.byte	0
 745 026e 03       		.uleb128 0x3
 746 026f 07020000 		.4byte	.LASF36
 747 0273 05       		.byte	0x5
 748 0274 B1       		.byte	0xb1
 749 0275 41020000 		.4byte	0x241
 750 0279 0D       		.uleb128 0xd
 751 027a 0D010000 		.4byte	.LASF43
 752 027e 01       		.byte	0x1
 753 027f 34       		.byte	0x34
 754 0280 81000000 		.4byte	0x81
 755 0284 00000000 		.4byte	.LFB0
 756 0288 DC000000 		.4byte	.LFE0-.LFB0
 757 028c 01       		.uleb128 0x1
 758 028d 9C       		.byte	0x9c
 759 028e F8020000 		.4byte	0x2f8
 760 0292 0E       		.uleb128 0xe
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 26


 761 0293 C9010000 		.4byte	.LASF41
 762 0297 01       		.byte	0x1
 763 0298 34       		.byte	0x34
 764 0299 F8020000 		.4byte	0x2f8
 765 029d 00000000 		.4byte	.LLST0
 766 02a1 0F       		.uleb128 0xf
 767 02a2 6900     		.ascii	"i\000"
 768 02a4 01       		.byte	0x1
 769 02a5 36       		.byte	0x36
 770 02a6 81000000 		.4byte	0x81
 771 02aa 21000000 		.4byte	.LLST1
 772 02ae 0F       		.uleb128 0xf
 773 02af 6A00     		.ascii	"j\000"
 774 02b1 01       		.byte	0x1
 775 02b2 36       		.byte	0x36
 776 02b3 81000000 		.4byte	0x81
 777 02b7 4A000000 		.4byte	.LLST2
 778 02bb 10       		.uleb128 0x10
 779 02bc CF000000 		.4byte	.LASF37
 780 02c0 01       		.byte	0x1
 781 02c1 36       		.byte	0x36
 782 02c2 81000000 		.4byte	0x81
 783 02c6 74000000 		.4byte	.LLST3
 784 02ca 10       		.uleb128 0x10
 785 02cb C3010000 		.4byte	.LASF38
 786 02cf 01       		.byte	0x1
 787 02d0 37       		.byte	0x37
 788 02d1 81000000 		.4byte	0x81
 789 02d5 92000000 		.4byte	.LLST4
 790 02d9 10       		.uleb128 0x10
 791 02da 02030000 		.4byte	.LASF39
 792 02de 01       		.byte	0x1
 793 02df 38       		.byte	0x38
 794 02e0 81000000 		.4byte	0x81
 795 02e4 BC000000 		.4byte	.LLST5
 796 02e8 10       		.uleb128 0x10
 797 02e9 3B010000 		.4byte	.LASF40
 798 02ed 01       		.byte	0x1
 799 02ee 39       		.byte	0x39
 800 02ef 8D000000 		.4byte	0x8d
 801 02f3 F2000000 		.4byte	.LLST6
 802 02f7 00       		.byte	0
 803 02f8 0C       		.uleb128 0xc
 804 02f9 04       		.byte	0x4
 805 02fa FE020000 		.4byte	0x2fe
 806 02fe 11       		.uleb128 0x11
 807 02ff CE010000 		.4byte	0x1ce
 808 0303 12       		.uleb128 0x12
 809 0304 DC000000 		.4byte	.LASF46
 810 0308 01       		.byte	0x1
 811 0309 B2       		.byte	0xb2
 812 030a 00000000 		.4byte	.LFB1
 813 030e 1C000000 		.4byte	.LFE1-.LFB1
 814 0312 01       		.uleb128 0x1
 815 0313 9C       		.byte	0x9c
 816 0314 28030000 		.4byte	0x328
 817 0318 0E       		.uleb128 0xe
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 27


 818 0319 19010000 		.4byte	.LASF42
 819 031d 01       		.byte	0x1
 820 031e B2       		.byte	0xb2
 821 031f 81000000 		.4byte	0x81
 822 0323 32010000 		.4byte	.LLST7
 823 0327 00       		.byte	0
 824 0328 0D       		.uleb128 0xd
 825 0329 0A000000 		.4byte	.LASF44
 826 032d 01       		.byte	0x1
 827 032e D0       		.byte	0xd0
 828 032f 81000000 		.4byte	0x81
 829 0333 00000000 		.4byte	.LFB2
 830 0337 20000000 		.4byte	.LFE2-.LFB2
 831 033b 01       		.uleb128 0x1
 832 033c 9C       		.byte	0x9c
 833 033d 51030000 		.4byte	0x351
 834 0341 10       		.uleb128 0x10
 835 0342 02030000 		.4byte	.LASF39
 836 0346 01       		.byte	0x1
 837 0347 D2       		.byte	0xd2
 838 0348 81000000 		.4byte	0x81
 839 034c 53010000 		.4byte	.LLST8
 840 0350 00       		.byte	0
 841 0351 13       		.uleb128 0x13
 842 0352 22010000 		.4byte	.LASF45
 843 0356 01       		.byte	0x1
 844 0357 0401     		.2byte	0x104
 845 0359 81000000 		.4byte	0x81
 846 035d 00000000 		.4byte	.LFB3
 847 0361 20000000 		.4byte	.LFE3-.LFB3
 848 0365 01       		.uleb128 0x1
 849 0366 9C       		.byte	0x9c
 850 0367 7C030000 		.4byte	0x37c
 851 036b 14       		.uleb128 0x14
 852 036c 02030000 		.4byte	.LASF39
 853 0370 01       		.byte	0x1
 854 0371 0601     		.2byte	0x106
 855 0373 81000000 		.4byte	0x81
 856 0377 72010000 		.4byte	.LLST9
 857 037b 00       		.byte	0
 858 037c 15       		.uleb128 0x15
 859 037d F3020000 		.4byte	.LASF47
 860 0381 01       		.byte	0x1
 861 0382 6E02     		.2byte	0x26e
 862 0384 00000000 		.4byte	.LFB4
 863 0388 6C000000 		.4byte	.LFE4-.LFB4
 864 038c 01       		.uleb128 0x1
 865 038d 9C       		.byte	0x9c
 866 038e 0A040000 		.4byte	0x40a
 867 0392 16       		.uleb128 0x16
 868 0393 64010000 		.4byte	.LASF48
 869 0397 01       		.byte	0x1
 870 0398 6E02     		.2byte	0x26e
 871 039a 81000000 		.4byte	0x81
 872 039e 91010000 		.4byte	.LLST10
 873 03a2 17       		.uleb128 0x17
 874 03a3 12000000 		.4byte	.LBB2
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 28


 875 03a7 52000000 		.4byte	.LBE2-.LBB2
 876 03ab 18       		.uleb128 0x18
 877 03ac 494400   		.ascii	"ID\000"
 878 03af 01       		.byte	0x1
 879 03b0 7802     		.2byte	0x278
 880 03b2 68000000 		.4byte	0x68
 881 03b6 B2010000 		.4byte	.LLST11
 882 03ba 19       		.uleb128 0x19
 883 03bb 3E000000 		.4byte	.LASF49
 884 03bf 01       		.byte	0x1
 885 03c0 7902     		.2byte	0x279
 886 03c2 36020000 		.4byte	0x236
 887 03c6 02       		.uleb128 0x2
 888 03c7 91       		.byte	0x91
 889 03c8 48       		.sleb128 -56
 890 03c9 19       		.uleb128 0x19
 891 03ca 36010000 		.4byte	.LASF50
 892 03ce 01       		.byte	0x1
 893 03cf 7A02     		.2byte	0x27a
 894 03d1 0A040000 		.4byte	0x40a
 895 03d5 02       		.uleb128 0x2
 896 03d6 91       		.byte	0x91
 897 03d7 40       		.sleb128 -64
 898 03d8 18       		.uleb128 0x18
 899 03d9 6900     		.ascii	"i\000"
 900 03db 01       		.byte	0x1
 901 03dc 7B02     		.2byte	0x27b
 902 03de 68000000 		.4byte	0x68
 903 03e2 C5010000 		.4byte	.LLST12
 904 03e6 1A       		.uleb128 0x1a
 905 03e7 D2020000 		.4byte	.LASF54
 906 03eb 01       		.byte	0x1
 907 03ec 7F02     		.2byte	0x27f
 908 03ee 68000000 		.4byte	0x68
 909 03f2 F8030000 		.4byte	0x3f8
 910 03f6 1B       		.uleb128 0x1b
 911 03f7 00       		.byte	0
 912 03f8 1C       		.uleb128 0x1c
 913 03f9 5C000000 		.4byte	.LVL38
 914 03fd 1A040000 		.4byte	0x41a
 915 0401 1D       		.uleb128 0x1d
 916 0402 01       		.uleb128 0x1
 917 0403 50       		.byte	0x50
 918 0404 02       		.uleb128 0x2
 919 0405 7D       		.byte	0x7d
 920 0406 00       		.sleb128 0
 921 0407 00       		.byte	0
 922 0408 00       		.byte	0
 923 0409 00       		.byte	0
 924 040a 09       		.uleb128 0x9
 925 040b 76000000 		.4byte	0x76
 926 040f 1A040000 		.4byte	0x41a
 927 0413 0A       		.uleb128 0xa
 928 0414 D7000000 		.4byte	0xd7
 929 0418 07       		.byte	0x7
 930 0419 00       		.byte	0
 931 041a 1E       		.uleb128 0x1e
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 29


 932 041b D2020000 		.4byte	.LASF54
 933 041f D2020000 		.4byte	.LASF54
 934 0423 01       		.byte	0x1
 935 0424 7F02     		.2byte	0x27f
 936 0426 00       		.byte	0
 937              		.section	.debug_abbrev,"",%progbits
 938              	.Ldebug_abbrev0:
 939 0000 01       		.uleb128 0x1
 940 0001 11       		.uleb128 0x11
 941 0002 01       		.byte	0x1
 942 0003 25       		.uleb128 0x25
 943 0004 0E       		.uleb128 0xe
 944 0005 13       		.uleb128 0x13
 945 0006 0B       		.uleb128 0xb
 946 0007 03       		.uleb128 0x3
 947 0008 0E       		.uleb128 0xe
 948 0009 1B       		.uleb128 0x1b
 949 000a 0E       		.uleb128 0xe
 950 000b 55       		.uleb128 0x55
 951 000c 17       		.uleb128 0x17
 952 000d 11       		.uleb128 0x11
 953 000e 01       		.uleb128 0x1
 954 000f 10       		.uleb128 0x10
 955 0010 17       		.uleb128 0x17
 956 0011 00       		.byte	0
 957 0012 00       		.byte	0
 958 0013 02       		.uleb128 0x2
 959 0014 24       		.uleb128 0x24
 960 0015 00       		.byte	0
 961 0016 0B       		.uleb128 0xb
 962 0017 0B       		.uleb128 0xb
 963 0018 3E       		.uleb128 0x3e
 964 0019 0B       		.uleb128 0xb
 965 001a 03       		.uleb128 0x3
 966 001b 0E       		.uleb128 0xe
 967 001c 00       		.byte	0
 968 001d 00       		.byte	0
 969 001e 03       		.uleb128 0x3
 970 001f 16       		.uleb128 0x16
 971 0020 00       		.byte	0
 972 0021 03       		.uleb128 0x3
 973 0022 0E       		.uleb128 0xe
 974 0023 3A       		.uleb128 0x3a
 975 0024 0B       		.uleb128 0xb
 976 0025 3B       		.uleb128 0x3b
 977 0026 0B       		.uleb128 0xb
 978 0027 49       		.uleb128 0x49
 979 0028 13       		.uleb128 0x13
 980 0029 00       		.byte	0
 981 002a 00       		.byte	0
 982 002b 04       		.uleb128 0x4
 983 002c 24       		.uleb128 0x24
 984 002d 00       		.byte	0
 985 002e 0B       		.uleb128 0xb
 986 002f 0B       		.uleb128 0xb
 987 0030 3E       		.uleb128 0x3e
 988 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 30


 989 0032 03       		.uleb128 0x3
 990 0033 08       		.uleb128 0x8
 991 0034 00       		.byte	0
 992 0035 00       		.byte	0
 993 0036 05       		.uleb128 0x5
 994 0037 16       		.uleb128 0x16
 995 0038 00       		.byte	0
 996 0039 03       		.uleb128 0x3
 997 003a 0E       		.uleb128 0xe
 998 003b 3A       		.uleb128 0x3a
 999 003c 0B       		.uleb128 0xb
 1000 003d 3B       		.uleb128 0x3b
 1001 003e 05       		.uleb128 0x5
 1002 003f 49       		.uleb128 0x49
 1003 0040 13       		.uleb128 0x13
 1004 0041 00       		.byte	0
 1005 0042 00       		.byte	0
 1006 0043 06       		.uleb128 0x6
 1007 0044 35       		.uleb128 0x35
 1008 0045 00       		.byte	0
 1009 0046 49       		.uleb128 0x49
 1010 0047 13       		.uleb128 0x13
 1011 0048 00       		.byte	0
 1012 0049 00       		.byte	0
 1013 004a 07       		.uleb128 0x7
 1014 004b 13       		.uleb128 0x13
 1015 004c 01       		.byte	0x1
 1016 004d 0B       		.uleb128 0xb
 1017 004e 0B       		.uleb128 0xb
 1018 004f 3A       		.uleb128 0x3a
 1019 0050 0B       		.uleb128 0xb
 1020 0051 3B       		.uleb128 0x3b
 1021 0052 0B       		.uleb128 0xb
 1022 0053 01       		.uleb128 0x1
 1023 0054 13       		.uleb128 0x13
 1024 0055 00       		.byte	0
 1025 0056 00       		.byte	0
 1026 0057 08       		.uleb128 0x8
 1027 0058 0D       		.uleb128 0xd
 1028 0059 00       		.byte	0
 1029 005a 03       		.uleb128 0x3
 1030 005b 0E       		.uleb128 0xe
 1031 005c 3A       		.uleb128 0x3a
 1032 005d 0B       		.uleb128 0xb
 1033 005e 3B       		.uleb128 0x3b
 1034 005f 0B       		.uleb128 0xb
 1035 0060 49       		.uleb128 0x49
 1036 0061 13       		.uleb128 0x13
 1037 0062 38       		.uleb128 0x38
 1038 0063 0B       		.uleb128 0xb
 1039 0064 00       		.byte	0
 1040 0065 00       		.byte	0
 1041 0066 09       		.uleb128 0x9
 1042 0067 01       		.uleb128 0x1
 1043 0068 01       		.byte	0x1
 1044 0069 49       		.uleb128 0x49
 1045 006a 13       		.uleb128 0x13
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 31


 1046 006b 01       		.uleb128 0x1
 1047 006c 13       		.uleb128 0x13
 1048 006d 00       		.byte	0
 1049 006e 00       		.byte	0
 1050 006f 0A       		.uleb128 0xa
 1051 0070 21       		.uleb128 0x21
 1052 0071 00       		.byte	0
 1053 0072 49       		.uleb128 0x49
 1054 0073 13       		.uleb128 0x13
 1055 0074 2F       		.uleb128 0x2f
 1056 0075 0B       		.uleb128 0xb
 1057 0076 00       		.byte	0
 1058 0077 00       		.byte	0
 1059 0078 0B       		.uleb128 0xb
 1060 0079 0D       		.uleb128 0xd
 1061 007a 00       		.byte	0
 1062 007b 03       		.uleb128 0x3
 1063 007c 08       		.uleb128 0x8
 1064 007d 3A       		.uleb128 0x3a
 1065 007e 0B       		.uleb128 0xb
 1066 007f 3B       		.uleb128 0x3b
 1067 0080 0B       		.uleb128 0xb
 1068 0081 49       		.uleb128 0x49
 1069 0082 13       		.uleb128 0x13
 1070 0083 38       		.uleb128 0x38
 1071 0084 0B       		.uleb128 0xb
 1072 0085 00       		.byte	0
 1073 0086 00       		.byte	0
 1074 0087 0C       		.uleb128 0xc
 1075 0088 0F       		.uleb128 0xf
 1076 0089 00       		.byte	0
 1077 008a 0B       		.uleb128 0xb
 1078 008b 0B       		.uleb128 0xb
 1079 008c 49       		.uleb128 0x49
 1080 008d 13       		.uleb128 0x13
 1081 008e 00       		.byte	0
 1082 008f 00       		.byte	0
 1083 0090 0D       		.uleb128 0xd
 1084 0091 2E       		.uleb128 0x2e
 1085 0092 01       		.byte	0x1
 1086 0093 3F       		.uleb128 0x3f
 1087 0094 19       		.uleb128 0x19
 1088 0095 03       		.uleb128 0x3
 1089 0096 0E       		.uleb128 0xe
 1090 0097 3A       		.uleb128 0x3a
 1091 0098 0B       		.uleb128 0xb
 1092 0099 3B       		.uleb128 0x3b
 1093 009a 0B       		.uleb128 0xb
 1094 009b 27       		.uleb128 0x27
 1095 009c 19       		.uleb128 0x19
 1096 009d 49       		.uleb128 0x49
 1097 009e 13       		.uleb128 0x13
 1098 009f 11       		.uleb128 0x11
 1099 00a0 01       		.uleb128 0x1
 1100 00a1 12       		.uleb128 0x12
 1101 00a2 06       		.uleb128 0x6
 1102 00a3 40       		.uleb128 0x40
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 32


 1103 00a4 18       		.uleb128 0x18
 1104 00a5 9742     		.uleb128 0x2117
 1105 00a7 19       		.uleb128 0x19
 1106 00a8 01       		.uleb128 0x1
 1107 00a9 13       		.uleb128 0x13
 1108 00aa 00       		.byte	0
 1109 00ab 00       		.byte	0
 1110 00ac 0E       		.uleb128 0xe
 1111 00ad 05       		.uleb128 0x5
 1112 00ae 00       		.byte	0
 1113 00af 03       		.uleb128 0x3
 1114 00b0 0E       		.uleb128 0xe
 1115 00b1 3A       		.uleb128 0x3a
 1116 00b2 0B       		.uleb128 0xb
 1117 00b3 3B       		.uleb128 0x3b
 1118 00b4 0B       		.uleb128 0xb
 1119 00b5 49       		.uleb128 0x49
 1120 00b6 13       		.uleb128 0x13
 1121 00b7 02       		.uleb128 0x2
 1122 00b8 17       		.uleb128 0x17
 1123 00b9 00       		.byte	0
 1124 00ba 00       		.byte	0
 1125 00bb 0F       		.uleb128 0xf
 1126 00bc 34       		.uleb128 0x34
 1127 00bd 00       		.byte	0
 1128 00be 03       		.uleb128 0x3
 1129 00bf 08       		.uleb128 0x8
 1130 00c0 3A       		.uleb128 0x3a
 1131 00c1 0B       		.uleb128 0xb
 1132 00c2 3B       		.uleb128 0x3b
 1133 00c3 0B       		.uleb128 0xb
 1134 00c4 49       		.uleb128 0x49
 1135 00c5 13       		.uleb128 0x13
 1136 00c6 02       		.uleb128 0x2
 1137 00c7 17       		.uleb128 0x17
 1138 00c8 00       		.byte	0
 1139 00c9 00       		.byte	0
 1140 00ca 10       		.uleb128 0x10
 1141 00cb 34       		.uleb128 0x34
 1142 00cc 00       		.byte	0
 1143 00cd 03       		.uleb128 0x3
 1144 00ce 0E       		.uleb128 0xe
 1145 00cf 3A       		.uleb128 0x3a
 1146 00d0 0B       		.uleb128 0xb
 1147 00d1 3B       		.uleb128 0x3b
 1148 00d2 0B       		.uleb128 0xb
 1149 00d3 49       		.uleb128 0x49
 1150 00d4 13       		.uleb128 0x13
 1151 00d5 02       		.uleb128 0x2
 1152 00d6 17       		.uleb128 0x17
 1153 00d7 00       		.byte	0
 1154 00d8 00       		.byte	0
 1155 00d9 11       		.uleb128 0x11
 1156 00da 26       		.uleb128 0x26
 1157 00db 00       		.byte	0
 1158 00dc 49       		.uleb128 0x49
 1159 00dd 13       		.uleb128 0x13
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 33


 1160 00de 00       		.byte	0
 1161 00df 00       		.byte	0
 1162 00e0 12       		.uleb128 0x12
 1163 00e1 2E       		.uleb128 0x2e
 1164 00e2 01       		.byte	0x1
 1165 00e3 3F       		.uleb128 0x3f
 1166 00e4 19       		.uleb128 0x19
 1167 00e5 03       		.uleb128 0x3
 1168 00e6 0E       		.uleb128 0xe
 1169 00e7 3A       		.uleb128 0x3a
 1170 00e8 0B       		.uleb128 0xb
 1171 00e9 3B       		.uleb128 0x3b
 1172 00ea 0B       		.uleb128 0xb
 1173 00eb 27       		.uleb128 0x27
 1174 00ec 19       		.uleb128 0x19
 1175 00ed 11       		.uleb128 0x11
 1176 00ee 01       		.uleb128 0x1
 1177 00ef 12       		.uleb128 0x12
 1178 00f0 06       		.uleb128 0x6
 1179 00f1 40       		.uleb128 0x40
 1180 00f2 18       		.uleb128 0x18
 1181 00f3 9742     		.uleb128 0x2117
 1182 00f5 19       		.uleb128 0x19
 1183 00f6 01       		.uleb128 0x1
 1184 00f7 13       		.uleb128 0x13
 1185 00f8 00       		.byte	0
 1186 00f9 00       		.byte	0
 1187 00fa 13       		.uleb128 0x13
 1188 00fb 2E       		.uleb128 0x2e
 1189 00fc 01       		.byte	0x1
 1190 00fd 3F       		.uleb128 0x3f
 1191 00fe 19       		.uleb128 0x19
 1192 00ff 03       		.uleb128 0x3
 1193 0100 0E       		.uleb128 0xe
 1194 0101 3A       		.uleb128 0x3a
 1195 0102 0B       		.uleb128 0xb
 1196 0103 3B       		.uleb128 0x3b
 1197 0104 05       		.uleb128 0x5
 1198 0105 27       		.uleb128 0x27
 1199 0106 19       		.uleb128 0x19
 1200 0107 49       		.uleb128 0x49
 1201 0108 13       		.uleb128 0x13
 1202 0109 11       		.uleb128 0x11
 1203 010a 01       		.uleb128 0x1
 1204 010b 12       		.uleb128 0x12
 1205 010c 06       		.uleb128 0x6
 1206 010d 40       		.uleb128 0x40
 1207 010e 18       		.uleb128 0x18
 1208 010f 9742     		.uleb128 0x2117
 1209 0111 19       		.uleb128 0x19
 1210 0112 01       		.uleb128 0x1
 1211 0113 13       		.uleb128 0x13
 1212 0114 00       		.byte	0
 1213 0115 00       		.byte	0
 1214 0116 14       		.uleb128 0x14
 1215 0117 34       		.uleb128 0x34
 1216 0118 00       		.byte	0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 34


 1217 0119 03       		.uleb128 0x3
 1218 011a 0E       		.uleb128 0xe
 1219 011b 3A       		.uleb128 0x3a
 1220 011c 0B       		.uleb128 0xb
 1221 011d 3B       		.uleb128 0x3b
 1222 011e 05       		.uleb128 0x5
 1223 011f 49       		.uleb128 0x49
 1224 0120 13       		.uleb128 0x13
 1225 0121 02       		.uleb128 0x2
 1226 0122 17       		.uleb128 0x17
 1227 0123 00       		.byte	0
 1228 0124 00       		.byte	0
 1229 0125 15       		.uleb128 0x15
 1230 0126 2E       		.uleb128 0x2e
 1231 0127 01       		.byte	0x1
 1232 0128 3F       		.uleb128 0x3f
 1233 0129 19       		.uleb128 0x19
 1234 012a 03       		.uleb128 0x3
 1235 012b 0E       		.uleb128 0xe
 1236 012c 3A       		.uleb128 0x3a
 1237 012d 0B       		.uleb128 0xb
 1238 012e 3B       		.uleb128 0x3b
 1239 012f 05       		.uleb128 0x5
 1240 0130 27       		.uleb128 0x27
 1241 0131 19       		.uleb128 0x19
 1242 0132 11       		.uleb128 0x11
 1243 0133 01       		.uleb128 0x1
 1244 0134 12       		.uleb128 0x12
 1245 0135 06       		.uleb128 0x6
 1246 0136 40       		.uleb128 0x40
 1247 0137 18       		.uleb128 0x18
 1248 0138 9742     		.uleb128 0x2117
 1249 013a 19       		.uleb128 0x19
 1250 013b 01       		.uleb128 0x1
 1251 013c 13       		.uleb128 0x13
 1252 013d 00       		.byte	0
 1253 013e 00       		.byte	0
 1254 013f 16       		.uleb128 0x16
 1255 0140 05       		.uleb128 0x5
 1256 0141 00       		.byte	0
 1257 0142 03       		.uleb128 0x3
 1258 0143 0E       		.uleb128 0xe
 1259 0144 3A       		.uleb128 0x3a
 1260 0145 0B       		.uleb128 0xb
 1261 0146 3B       		.uleb128 0x3b
 1262 0147 05       		.uleb128 0x5
 1263 0148 49       		.uleb128 0x49
 1264 0149 13       		.uleb128 0x13
 1265 014a 02       		.uleb128 0x2
 1266 014b 17       		.uleb128 0x17
 1267 014c 00       		.byte	0
 1268 014d 00       		.byte	0
 1269 014e 17       		.uleb128 0x17
 1270 014f 0B       		.uleb128 0xb
 1271 0150 01       		.byte	0x1
 1272 0151 11       		.uleb128 0x11
 1273 0152 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 35


 1274 0153 12       		.uleb128 0x12
 1275 0154 06       		.uleb128 0x6
 1276 0155 00       		.byte	0
 1277 0156 00       		.byte	0
 1278 0157 18       		.uleb128 0x18
 1279 0158 34       		.uleb128 0x34
 1280 0159 00       		.byte	0
 1281 015a 03       		.uleb128 0x3
 1282 015b 08       		.uleb128 0x8
 1283 015c 3A       		.uleb128 0x3a
 1284 015d 0B       		.uleb128 0xb
 1285 015e 3B       		.uleb128 0x3b
 1286 015f 05       		.uleb128 0x5
 1287 0160 49       		.uleb128 0x49
 1288 0161 13       		.uleb128 0x13
 1289 0162 02       		.uleb128 0x2
 1290 0163 17       		.uleb128 0x17
 1291 0164 00       		.byte	0
 1292 0165 00       		.byte	0
 1293 0166 19       		.uleb128 0x19
 1294 0167 34       		.uleb128 0x34
 1295 0168 00       		.byte	0
 1296 0169 03       		.uleb128 0x3
 1297 016a 0E       		.uleb128 0xe
 1298 016b 3A       		.uleb128 0x3a
 1299 016c 0B       		.uleb128 0xb
 1300 016d 3B       		.uleb128 0x3b
 1301 016e 05       		.uleb128 0x5
 1302 016f 49       		.uleb128 0x49
 1303 0170 13       		.uleb128 0x13
 1304 0171 02       		.uleb128 0x2
 1305 0172 18       		.uleb128 0x18
 1306 0173 00       		.byte	0
 1307 0174 00       		.byte	0
 1308 0175 1A       		.uleb128 0x1a
 1309 0176 2E       		.uleb128 0x2e
 1310 0177 01       		.byte	0x1
 1311 0178 3F       		.uleb128 0x3f
 1312 0179 19       		.uleb128 0x19
 1313 017a 03       		.uleb128 0x3
 1314 017b 0E       		.uleb128 0xe
 1315 017c 3A       		.uleb128 0x3a
 1316 017d 0B       		.uleb128 0xb
 1317 017e 3B       		.uleb128 0x3b
 1318 017f 05       		.uleb128 0x5
 1319 0180 49       		.uleb128 0x49
 1320 0181 13       		.uleb128 0x13
 1321 0182 3C       		.uleb128 0x3c
 1322 0183 19       		.uleb128 0x19
 1323 0184 01       		.uleb128 0x1
 1324 0185 13       		.uleb128 0x13
 1325 0186 00       		.byte	0
 1326 0187 00       		.byte	0
 1327 0188 1B       		.uleb128 0x1b
 1328 0189 18       		.uleb128 0x18
 1329 018a 00       		.byte	0
 1330 018b 00       		.byte	0
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 36


 1331 018c 00       		.byte	0
 1332 018d 1C       		.uleb128 0x1c
 1333 018e 898201   		.uleb128 0x4109
 1334 0191 01       		.byte	0x1
 1335 0192 11       		.uleb128 0x11
 1336 0193 01       		.uleb128 0x1
 1337 0194 31       		.uleb128 0x31
 1338 0195 13       		.uleb128 0x13
 1339 0196 00       		.byte	0
 1340 0197 00       		.byte	0
 1341 0198 1D       		.uleb128 0x1d
 1342 0199 8A8201   		.uleb128 0x410a
 1343 019c 00       		.byte	0
 1344 019d 02       		.uleb128 0x2
 1345 019e 18       		.uleb128 0x18
 1346 019f 9142     		.uleb128 0x2111
 1347 01a1 18       		.uleb128 0x18
 1348 01a2 00       		.byte	0
 1349 01a3 00       		.byte	0
 1350 01a4 1E       		.uleb128 0x1e
 1351 01a5 2E       		.uleb128 0x2e
 1352 01a6 00       		.byte	0
 1353 01a7 3F       		.uleb128 0x3f
 1354 01a8 19       		.uleb128 0x19
 1355 01a9 3C       		.uleb128 0x3c
 1356 01aa 19       		.uleb128 0x19
 1357 01ab 6E       		.uleb128 0x6e
 1358 01ac 0E       		.uleb128 0xe
 1359 01ad 03       		.uleb128 0x3
 1360 01ae 0E       		.uleb128 0xe
 1361 01af 3A       		.uleb128 0x3a
 1362 01b0 0B       		.uleb128 0xb
 1363 01b1 3B       		.uleb128 0x3b
 1364 01b2 05       		.uleb128 0x5
 1365 01b3 00       		.byte	0
 1366 01b4 00       		.byte	0
 1367 01b5 00       		.byte	0
 1368              		.section	.debug_loc,"",%progbits
 1369              	.Ldebug_loc0:
 1370              	.LLST0:
 1371 0000 00000000 		.4byte	.LVL0
 1372 0004 CA000000 		.4byte	.LVL24
 1373 0008 0100     		.2byte	0x1
 1374 000a 50       		.byte	0x50
 1375 000b CA000000 		.4byte	.LVL24
 1376 000f DC000000 		.4byte	.LFE0
 1377 0013 0400     		.2byte	0x4
 1378 0015 F3       		.byte	0xf3
 1379 0016 01       		.uleb128 0x1
 1380 0017 50       		.byte	0x50
 1381 0018 9F       		.byte	0x9f
 1382 0019 00000000 		.4byte	0
 1383 001d 00000000 		.4byte	0
 1384              	.LLST1:
 1385 0021 08000000 		.4byte	.LVL2
 1386 0025 B2000000 		.4byte	.LVL18
 1387 0029 0100     		.2byte	0x1
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 37


 1388 002b 52       		.byte	0x52
 1389 002c B4000000 		.4byte	.LVL19
 1390 0030 B6000000 		.4byte	.LVL20
 1391 0034 0100     		.2byte	0x1
 1392 0036 52       		.byte	0x52
 1393 0037 BA000000 		.4byte	.LVL21
 1394 003b C4000000 		.4byte	.LVL23
 1395 003f 0100     		.2byte	0x1
 1396 0041 52       		.byte	0x52
 1397 0042 00000000 		.4byte	0
 1398 0046 00000000 		.4byte	0
 1399              	.LLST2:
 1400 004a 5C000000 		.4byte	.LVL10
 1401 004e 60000000 		.4byte	.LVL11
 1402 0052 0200     		.2byte	0x2
 1403 0054 30       		.byte	0x30
 1404 0055 9F       		.byte	0x9f
 1405 0056 60000000 		.4byte	.LVL11
 1406 005a 7E000000 		.4byte	.LVL12
 1407 005e 0100     		.2byte	0x1
 1408 0060 53       		.byte	0x53
 1409 0061 80000000 		.4byte	.LVL13
 1410 0065 90000000 		.4byte	.LVL14
 1411 0069 0100     		.2byte	0x1
 1412 006b 53       		.byte	0x53
 1413 006c 00000000 		.4byte	0
 1414 0070 00000000 		.4byte	0
 1415              	.LLST3:
 1416 0074 08000000 		.4byte	.LVL2
 1417 0078 B6000000 		.4byte	.LVL20
 1418 007c 0100     		.2byte	0x1
 1419 007e 57       		.byte	0x57
 1420 007f BA000000 		.4byte	.LVL21
 1421 0083 C4000000 		.4byte	.LVL23
 1422 0087 0100     		.2byte	0x1
 1423 0089 57       		.byte	0x57
 1424 008a 00000000 		.4byte	0
 1425 008e 00000000 		.4byte	0
 1426              	.LLST4:
 1427 0092 02000000 		.4byte	.LVL1
 1428 0096 08000000 		.4byte	.LVL2
 1429 009a 0200     		.2byte	0x2
 1430 009c 30       		.byte	0x30
 1431 009d 9F       		.byte	0x9f
 1432 009e 08000000 		.4byte	.LVL2
 1433 00a2 C2000000 		.4byte	.LVL22
 1434 00a6 0100     		.2byte	0x1
 1435 00a8 56       		.byte	0x56
 1436 00a9 C4000000 		.4byte	.LVL23
 1437 00ad CC000000 		.4byte	.LVL25
 1438 00b1 0100     		.2byte	0x1
 1439 00b3 56       		.byte	0x56
 1440 00b4 00000000 		.4byte	0
 1441 00b8 00000000 		.4byte	0
 1442              	.LLST5:
 1443 00bc 02000000 		.4byte	.LVL1
 1444 00c0 08000000 		.4byte	.LVL2
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 38


 1445 00c4 0200     		.2byte	0x2
 1446 00c6 31       		.byte	0x31
 1447 00c7 9F       		.byte	0x9f
 1448 00c8 08000000 		.4byte	.LVL2
 1449 00cc 20000000 		.4byte	.LVL5
 1450 00d0 0100     		.2byte	0x1
 1451 00d2 51       		.byte	0x51
 1452 00d3 A8000000 		.4byte	.LVL15
 1453 00d7 AA000000 		.4byte	.LVL16
 1454 00db 0200     		.2byte	0x2
 1455 00dd 30       		.byte	0x30
 1456 00de 9F       		.byte	0x9f
 1457 00df AA000000 		.4byte	.LVL16
 1458 00e3 DC000000 		.4byte	.LFE0
 1459 00e7 0100     		.2byte	0x1
 1460 00e9 51       		.byte	0x51
 1461 00ea 00000000 		.4byte	0
 1462 00ee 00000000 		.4byte	0
 1463              	.LLST6:
 1464 00f2 16000000 		.4byte	.LVL3
 1465 00f6 1E000000 		.4byte	.LVL4
 1466 00fa 0200     		.2byte	0x2
 1467 00fc 30       		.byte	0x30
 1468 00fd 9F       		.byte	0x9f
 1469 00fe 1E000000 		.4byte	.LVL4
 1470 0102 4E000000 		.4byte	.LVL7
 1471 0106 0100     		.2byte	0x1
 1472 0108 53       		.byte	0x53
 1473 0109 4E000000 		.4byte	.LVL7
 1474 010d 50000000 		.4byte	.LVL8
 1475 0111 0100     		.2byte	0x1
 1476 0113 5E       		.byte	0x5e
 1477 0114 50000000 		.4byte	.LVL8
 1478 0118 54000000 		.4byte	.LVL9
 1479 011c 0100     		.2byte	0x1
 1480 011e 53       		.byte	0x53
 1481 011f 54000000 		.4byte	.LVL9
 1482 0123 AA000000 		.4byte	.LVL16
 1483 0127 0100     		.2byte	0x1
 1484 0129 5E       		.byte	0x5e
 1485 012a 00000000 		.4byte	0
 1486 012e 00000000 		.4byte	0
 1487              	.LLST7:
 1488 0132 00000000 		.4byte	.LVL26
 1489 0136 06000000 		.4byte	.LVL27
 1490 013a 0100     		.2byte	0x1
 1491 013c 50       		.byte	0x50
 1492 013d 06000000 		.4byte	.LVL27
 1493 0141 1C000000 		.4byte	.LFE1
 1494 0145 0400     		.2byte	0x4
 1495 0147 F3       		.byte	0xf3
 1496 0148 01       		.uleb128 0x1
 1497 0149 50       		.byte	0x50
 1498 014a 9F       		.byte	0x9f
 1499 014b 00000000 		.4byte	0
 1500 014f 00000000 		.4byte	0
 1501              	.LLST8:
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 39


 1502 0153 00000000 		.4byte	.LVL28
 1503 0157 1A000000 		.4byte	.LVL29
 1504 015b 0200     		.2byte	0x2
 1505 015d 30       		.byte	0x30
 1506 015e 9F       		.byte	0x9f
 1507 015f 1A000000 		.4byte	.LVL29
 1508 0163 20000000 		.4byte	.LFE2
 1509 0167 0100     		.2byte	0x1
 1510 0169 50       		.byte	0x50
 1511 016a 00000000 		.4byte	0
 1512 016e 00000000 		.4byte	0
 1513              	.LLST9:
 1514 0172 00000000 		.4byte	.LVL30
 1515 0176 1A000000 		.4byte	.LVL31
 1516 017a 0200     		.2byte	0x2
 1517 017c 30       		.byte	0x30
 1518 017d 9F       		.byte	0x9f
 1519 017e 1A000000 		.4byte	.LVL31
 1520 0182 20000000 		.4byte	.LFE3
 1521 0186 0100     		.2byte	0x1
 1522 0188 50       		.byte	0x50
 1523 0189 00000000 		.4byte	0
 1524 018d 00000000 		.4byte	0
 1525              	.LLST10:
 1526 0191 00000000 		.4byte	.LVL32
 1527 0195 2C000000 		.4byte	.LVL34
 1528 0199 0100     		.2byte	0x1
 1529 019b 50       		.byte	0x50
 1530 019c 2C000000 		.4byte	.LVL34
 1531 01a0 6C000000 		.4byte	.LFE4
 1532 01a4 0400     		.2byte	0x4
 1533 01a6 F3       		.byte	0xf3
 1534 01a7 01       		.uleb128 0x1
 1535 01a8 50       		.byte	0x50
 1536 01a9 9F       		.byte	0x9f
 1537 01aa 00000000 		.4byte	0
 1538 01ae 00000000 		.4byte	0
 1539              	.LLST11:
 1540 01b2 28000000 		.4byte	.LVL33
 1541 01b6 5B000000 		.4byte	.LVL38-1
 1542 01ba 0100     		.2byte	0x1
 1543 01bc 5E       		.byte	0x5e
 1544 01bd 00000000 		.4byte	0
 1545 01c1 00000000 		.4byte	0
 1546              	.LLST12:
 1547 01c5 3E000000 		.4byte	.LVL35
 1548 01c9 42000000 		.4byte	.LVL36
 1549 01cd 0200     		.2byte	0x2
 1550 01cf 30       		.byte	0x30
 1551 01d0 9F       		.byte	0x9f
 1552 01d1 42000000 		.4byte	.LVL36
 1553 01d5 5B000000 		.4byte	.LVL38-1
 1554 01d9 0100     		.2byte	0x1
 1555 01db 53       		.byte	0x53
 1556 01dc 00000000 		.4byte	0
 1557 01e0 00000000 		.4byte	0
 1558              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 40


 1559 0000 3C000000 		.4byte	0x3c
 1560 0004 0200     		.2byte	0x2
 1561 0006 00000000 		.4byte	.Ldebug_info0
 1562 000a 04       		.byte	0x4
 1563 000b 00       		.byte	0
 1564 000c 0000     		.2byte	0
 1565 000e 0000     		.2byte	0
 1566 0010 00000000 		.4byte	.LFB0
 1567 0014 DC000000 		.4byte	.LFE0-.LFB0
 1568 0018 00000000 		.4byte	.LFB1
 1569 001c 1C000000 		.4byte	.LFE1-.LFB1
 1570 0020 00000000 		.4byte	.LFB2
 1571 0024 20000000 		.4byte	.LFE2-.LFB2
 1572 0028 00000000 		.4byte	.LFB3
 1573 002c 20000000 		.4byte	.LFE3-.LFB3
 1574 0030 00000000 		.4byte	.LFB4
 1575 0034 6C000000 		.4byte	.LFE4-.LFB4
 1576 0038 00000000 		.4byte	0
 1577 003c 00000000 		.4byte	0
 1578              		.section	.debug_ranges,"",%progbits
 1579              	.Ldebug_ranges0:
 1580 0000 00000000 		.4byte	.LFB0
 1581 0004 DC000000 		.4byte	.LFE0
 1582 0008 00000000 		.4byte	.LFB1
 1583 000c 1C000000 		.4byte	.LFE1
 1584 0010 00000000 		.4byte	.LFB2
 1585 0014 20000000 		.4byte	.LFE2
 1586 0018 00000000 		.4byte	.LFB3
 1587 001c 20000000 		.4byte	.LFE3
 1588 0020 00000000 		.4byte	.LFB4
 1589 0024 6C000000 		.4byte	.LFE4
 1590 0028 00000000 		.4byte	0
 1591 002c 00000000 		.4byte	0
 1592              		.section	.debug_line,"",%progbits
 1593              	.Ldebug_line0:
 1594 0000 47020000 		.section	.debug_str,"MS",%progbits,1
 1594      02005101 
 1594      00000201 
 1594      FB0E0D00 
 1594      01010101 
 1595              	.LASF9:
 1596 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1596      6E74385F 
 1596      7400
 1597              	.LASF44:
 1598 000a 43414E5F 		.ascii	"CAN_SendMsgDash_status\000"
 1598      53656E64 
 1598      4D736744 
 1598      6173685F 
 1598      73746174 
 1599              	.LASF7:
 1600 0021 6C6F6E67 		.ascii	"long long unsigned int\000"
 1600      206C6F6E 
 1600      6720756E 
 1600      7369676E 
 1600      65642069 
 1601              	.LASF33:
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 41


 1602 0038 7478636D 		.ascii	"txcmd\000"
 1602      6400
 1603              	.LASF49:
 1604 003e 74657374 		.ascii	"test\000"
 1604      00
 1605              	.LASF30:
 1606 0043 7278616D 		.ascii	"rxamrd\000"
 1606      726400
 1607              	.LASF6:
 1608 004a 6C6F6E67 		.ascii	"long long int\000"
 1608      206C6F6E 
 1608      6720696E 
 1608      7400
 1609              	.LASF0:
 1610 0058 7369676E 		.ascii	"signed char\000"
 1610      65642063 
 1610      68617200 
 1611              	.LASF4:
 1612 0064 6C6F6E67 		.ascii	"long int\000"
 1612      20696E74 
 1612      00
 1613              	.LASF27:
 1614 006d 72786461 		.ascii	"rxdata\000"
 1614      746100
 1615              	.LASF11:
 1616 0074 75696E74 		.ascii	"uint8\000"
 1616      3800
 1617              	.LASF28:
 1618 007a 7278616D 		.ascii	"rxamr\000"
 1618      7200
 1619              	.LASF14:
 1620 0080 646F7562 		.ascii	"double\000"
 1620      6C6500
 1621              	.LASF53:
 1622 0087 5A3A5C44 		.ascii	"Z:\\Documents\\UCD\\FRUCD\\Dashboard-Firmware-FE9-F"
 1622      6F63756D 
 1622      656E7473 
 1622      5C554344 
 1622      5C465255 
 1623 00b6 45372D42 		.ascii	"E7-Board\\Dashboard.cydsn\000"
 1623      6F617264 
 1623      5C446173 
 1623      68626F61 
 1623      72642E63 
 1624              	.LASF37:
 1625 00cf 73686966 		.ascii	"shift\000"
 1625      7400
 1626              	.LASF12:
 1627 00d5 75696E74 		.ascii	"uint32\000"
 1627      333200
 1628              	.LASF46:
 1629 00dc 43414E5F 		.ascii	"CAN_TxCancel\000"
 1629      54784361 
 1629      6E63656C 
 1629      00
 1630              	.LASF21:
 1631 00e9 62797465 		.ascii	"byte\000"
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 42


 1631      00
 1632              	.LASF8:
 1633 00ee 756E7369 		.ascii	"unsigned int\000"
 1633      676E6564 
 1633      20696E74 
 1633      00
 1634              	.LASF5:
 1635 00fb 6C6F6E67 		.ascii	"long unsigned int\000"
 1635      20756E73 
 1635      69676E65 
 1635      6420696E 
 1635      7400
 1636              	.LASF43:
 1637 010d 43414E5F 		.ascii	"CAN_SendMsg\000"
 1637      53656E64 
 1637      4D736700 
 1638              	.LASF42:
 1639 0119 62756666 		.ascii	"bufferId\000"
 1639      65724964 
 1639      00
 1640              	.LASF45:
 1641 0122 43414E5F 		.ascii	"CAN_SendMsgDash_cmd\000"
 1641      53656E64 
 1641      4D736744 
 1641      6173685F 
 1641      636D6400 
 1642              	.LASF50:
 1643 0136 64617461 		.ascii	"data\000"
 1643      00
 1644              	.LASF40:
 1645 013b 72656754 		.ascii	"regTemp\000"
 1645      656D7000 
 1646              	.LASF3:
 1647 0143 73686F72 		.ascii	"short unsigned int\000"
 1647      7420756E 
 1647      7369676E 
 1647      65642069 
 1647      6E7400
 1648              	.LASF32:
 1649 0156 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1649      52585F53 
 1649      54525543 
 1649      5400
 1650              	.LASF48:
 1651 0164 72784D61 		.ascii	"rxMailbox\000"
 1651      696C626F 
 1651      7800
 1652              	.LASF35:
 1653 016e 74786461 		.ascii	"txdata\000"
 1653      746100
 1654              	.LASF17:
 1655 0175 72656733 		.ascii	"reg32\000"
 1655      3200
 1656              	.LASF23:
 1657 017b 43414E5F 		.ascii	"CAN_REG_32\000"
 1657      5245475F 
 1657      333200
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 43


 1658              	.LASF19:
 1659 0186 73697A65 		.ascii	"sizetype\000"
 1659      74797065 
 1659      00
 1660              	.LASF18:
 1661 018f 6C6F6E67 		.ascii	"long double\000"
 1661      20646F75 
 1661      626C6500 
 1662              	.LASF52:
 1663 019b 47656E65 		.ascii	"Generated_Source\\PSoC5\\CAN_TX_RX_func.c\000"
 1663      72617465 
 1663      645F536F 
 1663      75726365 
 1663      5C50536F 
 1664              	.LASF38:
 1665 01c3 72657472 		.ascii	"retry\000"
 1665      7900
 1666              	.LASF41:
 1667 01c9 6D657373 		.ascii	"message\000"
 1667      61676500 
 1668              	.LASF13:
 1669 01d1 666C6F61 		.ascii	"float\000"
 1669      7400
 1670              	.LASF16:
 1671 01d7 72656738 		.ascii	"reg8\000"
 1671      00
 1672              	.LASF1:
 1673 01dc 756E7369 		.ascii	"unsigned char\000"
 1673      676E6564 
 1673      20636861 
 1673      7200
 1674              	.LASF2:
 1675 01ea 73686F72 		.ascii	"short int\000"
 1675      7420696E 
 1675      7400
 1676              	.LASF20:
 1677 01f4 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 1677      44415441 
 1677      5F425954 
 1677      45535F4D 
 1677      534700
 1678              	.LASF36:
 1679 0207 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1679      54585F53 
 1679      54525543 
 1679      5400
 1680              	.LASF51:
 1681 0215 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1681      43313120 
 1681      352E342E 
 1681      31203230 
 1681      31363036 
 1682 0248 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1682      20726576 
 1682      6973696F 
 1682      6E203233 
 1682      37373135 
ARM GAS  C:\Users\ANDREY~1\AppData\Local\Temp\ccWzn6rZ.s 			page 44


 1683 027b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1683      66756E63 
 1683      74696F6E 
 1683      2D736563 
 1683      74696F6E 
 1684              	.LASF15:
 1685 02a3 63686172 		.ascii	"char\000"
 1685      00
 1686              	.LASF26:
 1687 02a8 72786964 		.ascii	"rxid\000"
 1687      00
 1688              	.LASF22:
 1689 02ad 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1689      44415441 
 1689      5F425954 
 1689      455300
 1690              	.LASF25:
 1691 02bc 7278636D 		.ascii	"rxcmd\000"
 1691      6400
 1692              	.LASF24:
 1693 02c2 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1693      54585F4D 
 1693      534700
 1694              	.LASF34:
 1695 02cd 74786964 		.ascii	"txid\000"
 1695      00
 1696              	.LASF54:
 1697 02d2 63616E5F 		.ascii	"can_receive\000"
 1697      72656365 
 1697      69766500 
 1698              	.LASF10:
 1699 02de 75696E74 		.ascii	"uint8_t\000"
 1699      385F7400 
 1700              	.LASF29:
 1701 02e6 72786163 		.ascii	"rxacr\000"
 1701      7200
 1702              	.LASF31:
 1703 02ec 72786163 		.ascii	"rxacrd\000"
 1703      726400
 1704              	.LASF47:
 1705 02f3 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1705      52656365 
 1705      6976654D 
 1705      736700
 1706              	.LASF39:
 1707 0302 72657375 		.ascii	"result\000"
 1707      6C7400
 1708              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
